# Generated by Django 3.2.16 on 2023-01-16 15:43

import admission.contrib.models.form_item
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('admission', '0083_baseadmission_valuated_secondaries_studies'),
    ]

    operations = [
        migrations.AddField(
            model_name='admissionformitem',
            name='values',
            field=admission.contrib.models.form_item.TranslatedListJSONField(
                base_field=models.JSONField(),
                blank=True,
                default=list,
                help_text='List of the values that the Selection elements can take (one per row).',
                size=None,
                verbose_name='Values',
            ),
        ),
        migrations.AlterField(
            model_name='admissionformitem',
            name='configuration',
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text='For a message, it is possible to specify the CSS class that we want to apply on it by using the "CLASSE_CSS" property. This is a string which can contain several classes, separated with a space. <a href="https://getbootstrap.com/docs/3.3/css/#helper-classes">Bootstrap classes</a> can be used here.<br>Full example: <code>{"CLASSE_CSS": "bg-info"}</code>.<br><br>For a text field, it is possible to specify if the user can enter a short ("COURT", by default) or a long ("LONG") text by using the "TAILLE_TEXTE" property.<br>Full example: <code>{"TAILLE_TEXTE": "LONG"}</code>.<br><br>For a file field, it is possible to specify the maximum number ("NOMBRE_MAX_DOCUMENT", default to 1) and the MIME types ("TYPES_MIME_FICHIER") of the files that can be uploaded.<br>Full example: <code>{"TYPES_MIME_FICHIER": ["application/pdf"], "NOMBRE_MAX_DOCUMENTS": 3}</code>.<br><br>For a selection field, it is possible to specify if the selection is realised through a list ("LISTE", by default), checkboxes ("CASES_A_COCHER") or radio buttons ("BOUTONS_RADIOS") by using the "TYPE_SELECTION" property. The list and the radios buttons allow to select only one value whereas the checkboxes allow to select several values.<br>Full example: <code>{"TYPE_SELECTION": "CASES_A_COCHER"}</code>.',
                verbose_name='Configuration',
            ),
        ),
        migrations.AlterField(
            model_name='admissionformitem',
            name='text',
            field=admission.contrib.models.form_item.TranslatedJSONField(
                blank=True,
                default=dict,
                help_text='Question tooltip text for Document, Selection and Text form elements. Content of the message to be displayed for Message elements.',
                validators=[admission.contrib.models.form_item.is_valid_translated_json_field],
                verbose_name='Text',
            ),
        ),
        migrations.AlterField(
            model_name='admissionformitem',
            name='title',
            field=admission.contrib.models.form_item.TranslatedJSONField(
                blank=True,
                default=dict,
                help_text='Question label for Document, Selection and Text form elements. Not used for Message elements.',
                validators=[admission.contrib.models.form_item.is_valid_translated_json_field],
                verbose_name='Title',
            ),
        ),
        migrations.AlterField(
            model_name='admissionformitem',
            name='help_text',
            field=admission.contrib.models.form_item.TranslatedJSONField(
                blank=True,
                default=dict,
                help_text='Placeholder text for Text form elements. Not used for Document, Selection and Message elements.',
                validators=[admission.contrib.models.form_item.is_valid_translated_json_field],
                verbose_name='Help text',
            ),
        ),
        migrations.AlterField(
            model_name='admissionformitem',
            name='type',
            field=models.CharField(
                choices=[
                    ('MESSAGE', 'Message'),
                    ('TEXTE', 'Text'),
                    ('DOCUMENT', 'Document'),
                    ('SELECTION', 'Selection'),
                ],
                max_length=30,
            ),
        ),
    ]
