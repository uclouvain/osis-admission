# Generated by Django 4.2.24 on 2025-09-30 17:10
import uuid

import django.core.serializers.json
import django.db.models.deletion
import osis_document_components.fields
from django.db import migrations, models


def migrate_specific_answers(apps, schema_editor):
    BaseAdmission = apps.get_model('admission', 'BaseAdmission')
    SpecificQuestionAnswer = apps.get_model('admission', 'SpecificQuestionAnswer')
    AdmissionFormItem = apps.get_model('admission', 'AdmissionFormItem')

    form_items = {
        str(form_item['uuid']): form_item for form_item in AdmissionFormItem.objects.values('uuid', 'id', 'type')
    }
    total = BaseAdmission.objects.exclude(old_specific_question_answers={}).count()
    answers = []
    print('')
    for i, admission in enumerate(
        BaseAdmission.objects.exclude(old_specific_question_answers={}).only('id', 'old_specific_question_answers')
    ):
        for form_item_uuid, answer in admission.old_specific_question_answers.items():
            form_item = form_items.get(form_item_uuid)
            if form_item is None:
                print(f'Unknown form item UUID {form_item_uuid} in admission {admission} (skipping this answer)')
                continue
            answers.append(
                SpecificQuestionAnswer(
                    admission_id=admission.id,
                    form_item_id=form_item['id'],
                    file=[uuid.UUID(file_uuid) for file_uuid in answer] if form_item['type'] == 'DOCUMENT' else None,
                    answer=answer if form_item['type'] != 'DOCUMENT' else None,
                )
            )

        if i % 1000 == 0:
            print(f'{i} / {total}')
    print(f'{total} / {total}\n{len(answers)} instances to create, bulk creating in DB...')
    SpecificQuestionAnswer.objects.bulk_create(answers, batch_size=1000)


class Migration(migrations.Migration):

    dependencies = [
        ("admission", "0271_doctorate_manager_submission_mail_template"),
    ]

    operations = [
        migrations.RenameField(
            model_name="baseadmission",
            old_name="specific_question_answers",
            new_name="old_specific_question_answers",
        ),
        migrations.CreateModel(
            name="SpecificQuestionAnswer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    osis_document_components.fields.FileField(
                        base_field=models.UUIDField(),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="File",
                    ),
                ),
                (
                    "answer",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="Answer",
                    ),
                ),
                (
                    "admission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specific_question_answers",
                        to="admission.baseadmission",
                        verbose_name="Admission",
                    ),
                ),
                (
                    "form_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="admission.admissionformitem",
                        verbose_name="Admission",
                    ),
                ),
            ],
        ),
        migrations.RunPython(migrate_specific_answers),
        migrations.AddConstraint(
            model_name="specificquestionanswer",
            constraint=models.UniqueConstraint(
                fields=("admission", "form_item"),
                name="admission_specific_question_answers_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="specificquestionanswer",
            constraint=models.CheckConstraint(
                check=models.Q(("file__isnull", False), ("answer__isnull", False), _connector="OR"),
                name="admission_specific_question_answers_file_or_answer",
            ),
        ),
        migrations.RemoveField(
            model_name="baseadmission",
            name="old_specific_question_answers",
        ),
    ]
