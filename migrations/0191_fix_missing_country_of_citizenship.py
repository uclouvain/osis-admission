# Generated by Django 3.2.25 on 2024-06-21 14:38

from django.db import migrations
from django.db.models import Q

from admission.ddd.admission.doctorat.preparation.domain.model.enums import STATUTS_PROPOSITION_DOCTORALE_SOUMISE
from admission.ddd.admission.formation_continue.domain.model.enums import STATUTS_PROPOSITION_CONTINUE_SOUMISE
from admission.ddd.admission.formation_generale.domain.model.enums import STATUTS_PROPOSITION_GENERALE_SOUMISE


def fix_missing_country_of_citizenship(apps, schema_editor):
    Person = apps.get_model('base', 'Person')
    Country = apps.get_model('reference', 'Country')
    for person in Person.objects.filter(
        Q(country_of_citizenship__isnull=True)
        & (
            Q(baseadmissions__generaleducationadmission__status__in=STATUTS_PROPOSITION_GENERALE_SOUMISE)
            | Q(baseadmissions__doctorateadmission__status__in=STATUTS_PROPOSITION_DOCTORALE_SOUMISE)
            | Q(baseadmissions__continuingeducationadmission__status__in=STATUTS_PROPOSITION_CONTINUE_SOUMISE)
        )
    ):
        admission = person.baseadmissions.filter(
            Q(generaleducationadmission__status__in=STATUTS_PROPOSITION_GENERALE_SOUMISE)
            | Q(doctorateadmission__status__in=STATUTS_PROPOSITION_DOCTORALE_SOUMISE)
            | Q(continuingeducationadmission__status__in=STATUTS_PROPOSITION_CONTINUE_SOUMISE)
        ).first()
        iso_code = admission.submitted_profile.get('identification', {}).get('country_of_citizenship')
        if iso_code:
            person.country_of_citizenship = Country.objects.get(iso_code=iso_code)
            person.save(update_fields=['country_of_citizenship'])


class Migration(migrations.Migration):

    dependencies = [
        ('admission', '0190_baseadmission_internal_access_titles'),
    ]

    operations = [
        migrations.RunPython(fix_missing_country_of_citizenship, reverse_code=migrations.RunPython.noop),
    ]
