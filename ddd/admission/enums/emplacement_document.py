# ##############################################################################
#
#    OSIS stands for Open Student Information System. It's an application
#    designed to manage the core business of higher education institutions,
#    such as universities, faculties, institutes and professional schools.
#    The core business involves the administration of students, teachers,
#    courses, programs and so on.
#
#    Copyright (C) 2015-2023 Université catholique de Louvain (http://www.uclouvain.be)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    A copy of this license - GNU General Public License - is available
#    at the root of the source code of this program.  If not,
#    see http://www.gnu.org/licenses/.
#
# ##############################################################################
from django.utils.translation import gettext_lazy as _, pgettext_lazy, ngettext_lazy

from base.models.utils.utils import ChoiceEnum


class TypeEmplacementDocument(ChoiceEnum):
    # Documents réclamables
    NON_LIBRE = _('Not free')
    LIBRE_RECLAMABLE_SIC = _('Free and requestable by SIC')
    LIBRE_RECLAMABLE_FAC = _('Free and requestable by FAC')
    # Documents non réclamables
    LIBRE_INTERNE_SIC = _('Free and uploaded by SIC for the managers')
    LIBRE_INTERNE_FAC = _('Free and uploaded by FAC for the managers')
    SYSTEME = _('Generated by the system')


EMPLACEMENTS_DOCUMENTS_INTERNES = {
    TypeEmplacementDocument.LIBRE_INTERNE_SIC.name,
    TypeEmplacementDocument.LIBRE_INTERNE_FAC.name,
    TypeEmplacementDocument.SYSTEME.name,
}

EMPLACEMENTS_DOCUMENTS_LIBRES_NON_RECLAMABLES = {
    TypeEmplacementDocument.LIBRE_INTERNE_FAC.name,
    TypeEmplacementDocument.LIBRE_INTERNE_SIC.name,
}

EMPLACEMENTS_DOCUMENTS_LIBRES_RECLAMABLES = {
    TypeEmplacementDocument.LIBRE_RECLAMABLE_FAC.name,
    TypeEmplacementDocument.LIBRE_RECLAMABLE_SIC.name,
}

EMPLACEMENTS_DOCUMENTS_RECLAMABLES = EMPLACEMENTS_DOCUMENTS_LIBRES_RECLAMABLES | {
    TypeEmplacementDocument.NON_LIBRE.name
}

EMPLACEMENTS_FAC = {
    TypeEmplacementDocument.LIBRE_INTERNE_FAC.name,
    TypeEmplacementDocument.LIBRE_RECLAMABLE_FAC.name,
}

EMPLACEMENTS_SIC = {
    TypeEmplacementDocument.NON_LIBRE.name,
    TypeEmplacementDocument.LIBRE_INTERNE_SIC.name,
    TypeEmplacementDocument.LIBRE_RECLAMABLE_SIC.name,
}


class StatutEmplacementDocument(ChoiceEnum):
    A_RECLAMER = _('To be requested')
    RECLAME = _('Requested')
    NON_ANALYSE = _('Not analyzed')
    VALIDE = _('Validated')
    COMPLETE_APRES_RECLAMATION = _('Completed after the request')


class OngletsDemande(ChoiceEnum):
    IDENTIFICATION = _('Identification')
    COORDONNEES = _('Coordinates')
    CHOIX_FORMATION = _('Training choice')
    ETUDES_SECONDAIRES = _('Secondary studies')
    CURRICULUM = _('Curriculum')
    LANGUES = _('Languages knowledge')
    COMPTABILITE = _('Accounting')
    PROJET = _('Research project')
    COTUTELLE = _('Cotutelle')
    SUPERVISION = _('Supervision')
    INFORMATIONS_ADDITIONNELLES = _('Additional information')
    CONFIRMATION = pgettext_lazy('tab', 'Finalization')


class IdentifiantBaseEmplacementDocument(ChoiceEnum):
    QUESTION_SPECIFIQUE = _('Specific question')
    LIBRE_CANDIDAT = _('Additional documents that can be requested from the candidate')
    LIBRE_GESTIONNAIRE = _('Additional documents uploaded by a manager')
    SYSTEME = _('System')


IDENTIFIANT_BASE_EMPLACEMENT_DOCUMENT_LIBRE_PAR_TYPE = {
    TypeEmplacementDocument.LIBRE_INTERNE_SIC.name: IdentifiantBaseEmplacementDocument.LIBRE_GESTIONNAIRE.name,
    TypeEmplacementDocument.LIBRE_INTERNE_FAC.name: IdentifiantBaseEmplacementDocument.LIBRE_GESTIONNAIRE.name,
    TypeEmplacementDocument.LIBRE_RECLAMABLE_FAC.name: IdentifiantBaseEmplacementDocument.LIBRE_CANDIDAT.name,
    TypeEmplacementDocument.LIBRE_RECLAMABLE_SIC.name: IdentifiantBaseEmplacementDocument.LIBRE_CANDIDAT.name,
}


DocumentsIdentification = {
    'PHOTO_IDENTITE': _('Identity picture'),
    'CARTE_IDENTITE': _('Identity card (both sides)'),
    'PASSEPORT': _('Passport'),
}


DocumentsSystemeFAC = {
    'ATTESTATION_ACCORD_FACULTAIRE': _('Approval certificate of faculty'),
    'ATTESTATION_REFUS_FACULTAIRE': _('Refusal certificate of faculty'),
}


DocumentsSysteme = {
    'DOSSIER_ANALYSE': _('Analysis folder'),
    **DocumentsSystemeFAC,
}


DocumentsEtudesSecondaires = {
    'DIPLOME_BELGE_DIPLOME': _('High school diploma'),
    'DIPLOME_BELGE_CERTIFICAT_INSCRIPTION': _('Certificate of enrolment or school attendance'),
    'DIPLOME_ETRANGER_DECISION_FINAL_EQUIVALENCE_UE': _(
        "A double-sided copy of the final equivalence decision (possibly with the DAES or "
        "the admission test for the first cycle of higher education in case of "
        "restrictive equivalence)"
    ),
    'DIPLOME_ETRANGER_PREUVE_DECISION_EQUIVALENCE': _('Proof of the final equivalence decision'),
    'DIPLOME_ETRANGER_DECISION_FINAL_EQUIVALENCE_HORS_UE': _(
        "A double-sided copy of the final equivalence decision issued by the Ministry of the "
        "French Community of Belgium (possibly with the DAES or the admission test for the "
        "first cycle of higher education if your equivalence doesn't give access to the "
        "desired programme)"
    ),
    'DIPLOME_ETRANGER_DIPLOME': _('High school diploma'),
    'DIPLOME_ETRANGER_TRADUCTION_DIPLOME': _('A certified translation of your high school diploma'),
    'DIPLOME_ETRANGER_CERTIFICAT_INSCRIPTION': _('Certificate of enrolment or school attendance'),
    'DIPLOME_ETRANGER_TRADUCTION_CERTIFICAT_INSCRIPTION': _(
        'A certified translation of your certificate of enrolment or school attendance'
    ),
    'DIPLOME_ETRANGER_RELEVE_NOTES': _('A transcript or your last year at high school'),
    'DIPLOME_ETRANGER_TRADUCTION_RELEVE_NOTES': _(
        'A certified translation of your official transcript of marks for your final year of secondary education'
    ),
    'ALTERNATIVE_SECONDAIRES_EXAMEN_ADMISSION_PREMIER_CYCLE': _(
        'Certificate of successful completion of the admission test for the first cycle of higher education'
    ),
}


DocumentsConnaissancesLangues = {
    'CERTIFICAT_CONNAISSANCE_LANGUE': _('Certificate of language knowledge'),
}


DocumentsCurriculum = {
    'DIPLOME_EQUIVALENCE': _(
        'Copy of the equivalence decision delivered by the French Community of Belgium making your '
        '2nd cycle diploma (bac+5) equivalent to the academic grade of a corresponding master.'
    ),
    'CURRICULUM': _('Curriculum vitae detailed, dated and signed'),
    'RELEVE_NOTES': _('Transcript'),
    'TRADUCTION_RELEVE_NOTES': _('Transcript translation'),
    'RELEVE_NOTES_ANNUEL': _('Transcript'),
    'TRADUCTION_RELEVE_NOTES_ANNUEL': _('Transcript translation'),
    'RESUME_MEMOIRE': _('Dissertation summary'),
    'DIPLOME': _('Graduate degree'),
    'TRADUCTION_DIPLOME': _('Graduate degree translation'),
    'CERTIFICAT_EXPERIENCE': _('Certificate of experience'),
}


DocumentsQuestionsSpecifiques = {
    'COPIE_TITRE_SEJOUR': _(
        'Copy of the residence permit covering the entire course, including the evaluation test '
        '(except for courses organised online)'
    ),
    'ATTESTATION_INSCRIPTION_REGULIERE': _('Certificate of regular enrolment'),
    'FORMULAIRE_MODIFICATION_INSCRIPTION': _('Registration modification form'),
}


# The keys corresponding to the attributes (in uppercase) of the following domain models:
# admission.ddd.admission.formation_generale.domain.model._comptabilite.Comptabilite
# admission.ddd.admission.doctorat.preparation.domain.model._comptabilite.Comptabilite
DocumentsAssimilation = {
    'CARTE_RESIDENT_LONGUE_DUREE': _('Copy of both sides of the EC long-term resident card (D or L card)'),
    'CARTE_CIRE_SEJOUR_ILLIMITE_ETRANGER': _(
        "Copy of both sides of the Certificate of Registration in the Register of Foreigners CIRE - "
        "unlimited stay (B card) or copy of the foreigner's card - unlimited stay (C or K card)"
    ),
    'CARTE_SEJOUR_MEMBRE_UE': _(
        'Copy of both sides of the residence card of a family member of a European Union citizen (F card)'
    ),
    'CARTE_SEJOUR_PERMANENT_MEMBRE_UE': _(
        'Copy of both sides of the permanent residence card of a family member of a European Union citizen (F+ card)'
    ),
    'CARTE_A_B_REFUGIE': _('Copy of both sides of the A or B card (with "refugee" written on the back of the card)'),
    'ANNEXE_25_26_REFUGIES_APATRIDES': _(
        'Copy of the Annex 25 or 26 completed by the Office of the Commissioner General for Refugees and Stateless '
        'Persons'
    ),
    'ATTESTATION_IMMATRICULATION': _('Copy of the registration certificate "orange card"'),
    'CARTE_A_B': _('Copy of both sides of the A or B Card'),
    'DECISION_PROTECTION_SUBSIDIAIRE': _(
        'Copy of the decision of the Foreigners\' Office confirming the granting of subsidiary protection'
    ),
    'DECISION_PROTECTION_TEMPORAIRE': _(
        'Copy of the decision of the Foreigners\' Office confirming the granting of temporary protection'
    ),
    'TITRE_SEJOUR_3_MOIS_PROFESSIONEL': _('Copy of both sides of the residence permit valid for more than 3 months'),
    'FICHES_REMUNERATION': _('Copy of 6 salary slips issued in the 12 months preceding the application'),
    'TITRE_SEJOUR_3_MOIS_REMPLACEMENT': _('Copy of both sides of the residence permit valid for more than 3 months'),
    'PREUVE_ALLOCATIONS_CHOMAGE_PENSION_INDEMNITE': _(
        'Proof of receipt of unemployment benefit, pension or compensation from the mutual insurance company'
    ),
    'ATTESTATION_CPAS': _('Recent certificate of support from the CPAS'),
    'COMPOSITION_MENAGE_ACTE_NAISSANCE': _('Household composition, or a copy of your birth certificate'),
    'ACTE_TUTELLE': _('Copy of the tutorship act authenticated by the Belgian authorities'),
    'COMPOSITION_MENAGE_ACTE_MARIAGE': _(
        'Household composition or marriage certificate authenticated by the Belgian authorities'
    ),
    'ATTESTATION_COHABITATION_LEGALE': _('Certificate of legal cohabitation'),
    'CARTE_IDENTITE_PARENT': _('Copy of both sides of the identity card of %(person_concerned)s'),
    'TITRE_SEJOUR_LONGUE_DUREE_PARENT': _(
        'Copy of both sides of the long-term residence permit in Belgium of %(person_concerned)s '
        '(B, C, D, F, F+, K, L or M cards)'
    ),
    'ANNEXE_25_26_REFUGIES_APATRIDES_DECISION_PROTECTION_PARENT': _(
        'Copy of the Annex 25 or 26 or the A/B card mentioning the refugee status or copy of the decision of the '
        'Foreigners\' Office confirming the temporary/subsidiary protection of %(person_concerned)s '
        'or copy of the official document from the municipality or the Foreigners\' Office proving the '
        'stateless status of %(person_concerned)s'
    ),
    'TITRE_SEJOUR_3_MOIS_PARENT': _(
        'Copy of both sides of the residence permit valid for more than 3 months of %(person_concerned)s'
    ),
    'FICHES_REMUNERATION_PARENT': _(
        'Copy of the 6 salary slips issued in the 12 months preceding the application for registration or proof of '
        'receipt of unemployment benefit, pension or an indemnity from the mutual insurance company of '
        '%(person_concerned)s'
    ),
    'ATTESTATION_CPAS_PARENT': _('Recent certificate of support from the CPAS of %(person_concerned)s'),
    'DECISION_BOURSE_CFWB': _('Copy of the decision to grant the scholarship from the CFWB'),
    'ATTESTATION_BOURSIER': _(
        'Copy of the certificate of scholarship holder issued by the General Administration for Development Cooperation'
    ),
    'TITRE_IDENTITE_SEJOUR_LONGUE_DUREE_UE': _(
        'Copy of both sides of the identity document proving the long-term stay in a member state of the European Union'
    ),
    'TITRE_SEJOUR_BELGIQUE': _('Copy of both sides of the residence permit in Belgium'),
}
DocumentsComptabilite = {
    'ATTESTATION_ABSENCE_DETTE_ETABLISSEMENT': ngettext_lazy(
        'Certificate stating the absence of debts towards the institution attended '
        'during the academic year %(academic_year)s: %(names)s',
        'Certificates stating the absence of debts towards the institutions attended '
        'during the academic year %(academic_year)s: %(names)s',
        'count',
    ),
    'ATTESTATION_ENFANT_PERSONNEL': _('Staff child certificate'),
    **DocumentsAssimilation,
}


DocumentsProjetRecherche = {
    'PREUVE_BOURSE': _('Scholarship proof'),
    'DOCUMENTS_PROJET': _('Research project'),
    'PROPOSITION_PROGRAMME_DOCTORAL': _('Doctoral program proposition'),
    'PROJET_FORMATION_COMPLEMENTAIRE': _('Complementary training proposition'),
    'GRAPHE_GANTT': _("Gantt graph"),
    'LETTRES_RECOMMANDATION': _("Recommendation letters"),
}


DocumentsCotutelle = {
    'DEMANDE_OUVERTURE': _('Cotutelle opening request'),
    'CONVENTION': _('Cotutelle convention'),
    'AUTRES_DOCUMENTS': _('Other documents concerning cotutelle'),
}


DocumentsSupervision = {
    'APPROBATION_PDF': _('Approbation by pdf'),
}
