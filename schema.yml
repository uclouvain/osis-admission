openapi: 3.0.0
info:
  title: Admission API
  version: 1.0.29
  description: This API delivers data for the Admission project.
  contact:
    name: UCLouvain - OSIS
    url: https://github.com/uclouvain/osis
paths:
  /dashboard:
    get:
      operationId: retrieve_dashboard
      description: Get the actions links for the application
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions:
    get:
      operationId: list_propositions
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionSearch'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    post:
      operationId: create_proposition
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitierPropositionCommand'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /supervised_propositions:
    get:
      operationId: list_supervised_propositions
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropositionSearchDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /person:
    get:
      operationId: retrievePersonIdentification
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updatePersonIdentification
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /coordonnees:
    get:
      operationId: retrieveCoordonnees
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateCoordonnees
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /secondary_studies:
    get:
      operationId: retrieveHighSchoolDiploma
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateHighSchoolDiploma
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /languages_knowledge:
    get:
      operationId: listLanguageKnowledges
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    post:
      operationId: createLanguageKnowledge
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LanguageKnowledge'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /curriculum/file:
    get:
      operationId: retrieveCurriculumFile
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumFile'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateCurriculumFile
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumFile'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /curriculum/:
    get:
      operationId: retrieveCurriculum
      description: Return the experiences and the curriculum pdf of a person and the
        mandatory years to complete.
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /curriculum/educational/{experience_id}:
    get:
      operationId: retrieve_educational_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: update_educational_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    delete:
      operationId: destroy_educational_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /curriculum/professional/{experience_id}:
    get:
      operationId: retrieve_professional_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: update_professional_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    delete:
      operationId: destroy_professional_experience
      description: ''
      parameters:
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}:
    get:
      operationId: retrieve_proposition
      description: Get a single proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: update_proposition
      description: Edit a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterPropositionCommand'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    delete:
      operationId: destroy_proposition
      description: Soft-Delete a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/person:
    get:
      operationId: retrievePersonIdentificationAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updatePersonIdentificationAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/coordonnees:
    get:
      operationId: retrieveCoordonneesAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateCoordonneesAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/secondary_studies:
    get:
      operationId: retrieveHighSchoolDiplomaAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateHighSchoolDiplomaAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/languages_knowledge:
    get:
      operationId: listLanguageKnowledgesAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    post:
      operationId: createLanguageKnowledgeAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LanguageKnowledge'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/file:
    get:
      operationId: retrieveCurriculumFileAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumFile'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: updateCurriculumFileAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurriculumFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumFile'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/:
    get:
      operationId: retrieveCurriculumAdmission
      description: Return the experiences and the curriculum pdf of a person and the
        mandatory years to complete.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/educational/{experience_id}:
    get:
      operationId: retrieve_educational_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: update_educational_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    delete:
      operationId: destroy_educational_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/professional/{experience_id}:
    get:
      operationId: retrieve_professional_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    put:
      operationId: update_professional_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
    delete:
      operationId: destroy_professional_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: experience_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/verify_project:
    get:
      operationId: retrieve_verify_project
      description: Check the project to be OK with all validators.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Project verification errors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: string
                    detail:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/submit:
    get:
      operationId: verify_proposition
      description: Check the proposition to be OK with all validators.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          description: Proposition verification errors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: string
                    detail:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    post:
      operationId: submit_proposition
      description: Submit the proposition.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropositionIdentityDTO'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/cotutelle:
    get:
      operationId: retrieve_cotutelle
      description: Get the cotutelle of a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CotutelleDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: update_cotutelle
      description: Set the cotutelle of a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefinirCotutelleCommand'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/supervision:
    get:
      operationId: retrieve_supervision
      description: Get the supervision group of a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    post:
      operationId: remove_member
      description: Remove a supervision group member for a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisionActor'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: add_member
      description: Add a supervision group member for a proposition
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisionActor'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/confirmation:
    get:
      operationId: retrieve_confirmation_papers
      description: Get the confirmation papers related to the doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfirmationPaperDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/confirmation/last:
    get:
      operationId: retrieve_last_confirmation_paper
      description: Get the last confirmation paper related to the doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationPaperDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    post:
      operationId: submit_confirmation_paper_extension_request
      description: Submit the extension request of the last confirmation paper of
        a doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitConfirmationPaperExtensionRequestCommand'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: submit_confirmation_paper
      description: Submit the confirmation paper related to a doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitConfirmationPaperCommand'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/confirmation/last/canvas:
    get:
      operationId: retrieve_last_confirmation_paper_canvas
      description: Get the last confirmation paper canvas related to the doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationPaperCanvas'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/doctorate:
    get:
      operationId: retrieveDoctorateDTO
      description: Get the doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/training:
    get:
      operationId: list_doctoral_trainings
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    post:
      operationId: create_doctoral_training
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingActivity'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/training/config:
    get:
      operationId: retrieveDoctoralTrainingConfig
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingConfig'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/training/{activity_id}:
    get:
      operationId: retrieve_doctoral_training
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: activity_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: update_doctoral_training
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: activity_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingActivity'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /autocomplete/sector:
    get:
      operationId: listSectorDTOs
      description: Autocomplete sectors
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectorDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - autocomplete
  /autocomplete/sector/{sigle}/doctorates:
    get:
      operationId: listDoctoratDTOs
      description: Autocomplete doctorates given a sector
      parameters:
      - name: sigle
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoratDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - autocomplete
  /autocomplete/tutor:
    get:
      operationId: listTutors
      description: Autocomplete tutors
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tutor'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - autocomplete
  /autocomplete/person:
    get:
      operationId: listPersons
      description: Autocomplete person
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Person'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - autocomplete
  /curriculum/educational:
    post:
      operationId: create_educational_experience
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /curriculum/professional:
    post:
      operationId: create_professional_experience
      description: ''
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/educational:
    post:
      operationId: create_educational_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/curriculum/professional:
    post:
      operationId: create_professional_experienceAdmission
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - person
  /propositions/{uuid}/request_signatures:
    post:
      operationId: create_signatures
      description: Ask for all promoters and members to sign the proposition.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropositionIdentityDTO'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/approve:
    post:
      operationId: approve_proposition
      description: Approve the proposition.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprouverPropositionCommand'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
    put:
      operationId: reject_proposition
      description: Reject the proposition.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefuserPropositionCommand'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/approve-by-pdf:
    post:
      operationId: approve_by_pdf
      description: Approve the proposition with a pdf file.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprouverPropositionParPdfCommand'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/training/submit:
    post:
      operationId: submit_doctoral_training
      description: Submit doctoral training activities.
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingBatch'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingBatch'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
  /propositions/{uuid}/supervised_confirmation:
    put:
      operationId: complete_confirmation_paper_by_promoter
      description: Complete the confirmation paper related to a doctorate
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteConfirmationPaperByPromoterCommand'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
      - propositions
components:
  schemas:
    Dashboard:
      type: object
      properties:
        links:
          type: object
          properties:
            list_propositions:
              $ref: '#/components/schemas/ActionLink'
            list_supervised:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
    PropositionSearch:
      type: object
      properties:
        links:
          type: object
          properties:
            create_proposition:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        propositions:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
              reference:
                type: string
              type_admission:
                type: string
              sigle_doctorat:
                type: string
              intitule_doctorat:
                type: string
              matricule_candidat:
                type: string
              prenom_candidat:
                type: string
              nom_candidat:
                type: string
              code_secteur_formation:
                type: string
              intitule_secteur_formation:
                type: string
              commission_proximite:
                type: string
              creee_le:
                type: string
                format: date-time
              statut:
                type: string
              links:
                type: object
                properties:
                  retrieve_person:
                    $ref: '#/components/schemas/ActionLink'
                  update_person:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_coordinates:
                    $ref: '#/components/schemas/ActionLink'
                  update_coordinates:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_secondary_studies:
                    $ref: '#/components/schemas/ActionLink'
                  update_secondary_studies:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_languages:
                    $ref: '#/components/schemas/ActionLink'
                  update_languages:
                    $ref: '#/components/schemas/ActionLink'
                  destroy_proposition:
                    $ref: '#/components/schemas/ActionLink'
                  submit_proposition:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_proposition:
                    $ref: '#/components/schemas/ActionLink'
                  update_proposition:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_cotutelle:
                    $ref: '#/components/schemas/ActionLink'
                  update_cotutelle:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_supervision:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_curriculum:
                    $ref: '#/components/schemas/ActionLink'
                  update_curriculum:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_confirmation:
                    $ref: '#/components/schemas/ActionLink'
                  update_confirmation:
                    $ref: '#/components/schemas/ActionLink'
                  retrieve_training:
                    $ref: '#/components/schemas/ActionLink'
                readOnly: true
                default: {}
            required:
            - uuid
            - reference
            - type_admission
            - sigle_doctorat
            - intitule_doctorat
            - matricule_candidat
            - prenom_candidat
            - nom_candidat
            - code_secteur_formation
            - intitule_secteur_formation
            - creee_le
            - statut
      required:
      - propositions
    PropositionSearchDTO:
      type: object
      properties:
        uuid:
          type: string
        reference:
          type: string
        type_admission:
          type: string
        sigle_doctorat:
          type: string
        intitule_doctorat:
          type: string
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        code_secteur_formation:
          type: string
        intitule_secteur_formation:
          type: string
        commission_proximite:
          type: string
        creee_le:
          type: string
          format: date-time
        statut:
          type: string
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_languages:
              $ref: '#/components/schemas/ActionLink'
            update_languages:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_proposition:
              $ref: '#/components/schemas/ActionLink'
            update_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            update_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_confirmation:
              $ref: '#/components/schemas/ActionLink'
            update_confirmation:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - uuid
      - reference
      - type_admission
      - sigle_doctorat
      - intitule_doctorat
      - matricule_candidat
      - prenom_candidat
      - nom_candidat
      - code_secteur_formation
      - intitule_secteur_formation
      - creee_le
      - statut
    PersonIdentification:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        middle_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        first_name_in_use:
          type: string
          maxLength: 50
        birth_date:
          type: string
          format: date
          nullable: true
        birth_year:
          type: integer
          maximum: 2999
          minimum: 1900
          nullable: true
          pattern: ^[1-2]\d{3}$
        birth_country:
          type: string
          nullable: true
        birth_place:
          type: string
          maxLength: 255
        country_of_citizenship:
          type: string
          nullable: true
        language:
          enum:
          - ''
          - fr-be
          - en
          type: string
        sex:
          enum:
          - ''
          - F
          - M
          type: string
        gender:
          $ref: '#/components/schemas/ChoixGenre'
        civil_state:
          $ref: '#/components/schemas/CivilState'
        id_photo:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 1
        id_card:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 2
        passport:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 2
        national_number:
          type: string
          maxLength: 255
        id_card_number:
          type: string
          maxLength: 255
        passport_number:
          type: string
          maxLength: 255
        passport_expiration_date:
          type: string
          format: date
          nullable: true
        last_registration_year:
          type: integer
          nullable: true
        last_registration_id:
          type: string
          maxLength: 10
    ActionLink:
      type: object
      properties:
        error:
          type: string
        method:
          type: string
          enum:
          - DELETE
          - GET
          - PATCH
          - POST
          - PUT
        url:
          type: string
          format: uri
      oneOf:
      - required:
        - method
        - url
      - required:
        - error
    ChoixGenre:
      enum:
      - ''
      - F
      - H
      - X
      type: string
    CivilState:
      enum:
      - ''
      - LEGAL_COHABITANT
      - SINGLE
      - DIVORCED
      - MARRIED
      - SEPARATE
      - WIDOWED
      type: string
    Coordonnees:
      type: object
      properties:
        contact:
          type: object
          properties:
            location:
              type: string
              nullable: true
              maxLength: 255
            postal_code:
              type: string
              nullable: true
              maxLength: 20
            city:
              type: string
              nullable: true
              maxLength: 255
            country:
              type: string
              nullable: true
            street:
              type: string
              maxLength: 255
            street_number:
              type: string
              maxLength: 20
            postal_box:
              type: string
              maxLength: 20
            place:
              type: string
              maxLength: 255
          nullable: true
        residential:
          type: object
          properties:
            location:
              type: string
              nullable: true
              maxLength: 255
            postal_code:
              type: string
              nullable: true
              maxLength: 20
            city:
              type: string
              nullable: true
              maxLength: 255
            country:
              type: string
              nullable: true
            street:
              type: string
              maxLength: 255
            street_number:
              type: string
              maxLength: 20
            postal_box:
              type: string
              maxLength: 20
            place:
              type: string
              maxLength: 255
          nullable: true
        email:
          type: string
          readOnly: true
        phone_mobile:
          type: string
      required:
      - contact
      - residential
      - phone_mobile
    HighSchoolDiploma:
      type: object
      properties:
        belgian_diploma:
          type: object
          properties:
            academic_graduation_year:
              type: integer
              nullable: true
            high_school_diploma:
              type: array
              items:
                type: string
              maxItems: 1
            enrolment_certificate:
              type: array
              items:
                type: string
              maxItems: 1
            result:
              $ref: '#/components/schemas/DiplomaResults'
              nullable: true
            community:
              $ref: '#/components/schemas/BelgianCommunitiesOfEducation'
              nullable: true
            educational_type:
              $ref: '#/components/schemas/EducationalType'
              nullable: true
            educational_other:
              type: string
              maxLength: 50
            institute:
              type: string
              nullable: true
            other_institute_name:
              type: string
              description: "Si vous ne trouvez pas votre institut dans la liste, merci\
                \ de le pr\xE9ciser ici"
              maxLength: 500
            other_institute_address:
              type: string
              maxLength: 500
            schedule:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                latin:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                greek:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                chemistry:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                physic:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                biology:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                german:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                dutch:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                english:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                french:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                spanish:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                modern_languages_other_label:
                  type: string
                  description: "Si autre langue, pr\xE9cisez"
                  maxLength: 25
                modern_languages_other_hours:
                  type: integer
                  maximum: 2147483647
                  nullable: true
                  minimum: 0
                mathematics:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                it:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                social_sciences:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                economic_sciences:
                  type: integer
                  maximum: 2147483647
                  minimum: 0
                other_label:
                  type: string
                  description: "Si autres mati\xE8res optionnelles, pr\xE9cisez"
                  maxLength: 25
                other_hours:
                  type: integer
                  maximum: 2147483647
                  nullable: true
                  minimum: 0
              nullable: true
          required:
          - academic_graduation_year
          nullable: true
        foreign_diploma:
          type: object
          properties:
            academic_graduation_year:
              type: integer
              nullable: true
            high_school_transcript:
              type: array
              items:
                type: string
              maxItems: 1
            high_school_diploma:
              type: array
              items:
                type: string
              maxItems: 1
            enrolment_certificate:
              type: array
              items:
                type: string
              maxItems: 1
            result:
              $ref: '#/components/schemas/DiplomaResults'
              nullable: true
            foreign_diploma_type:
              $ref: '#/components/schemas/ForeignDiplomaTypes'
              nullable: true
            linguistic_regime:
              type: string
              nullable: true
            other_linguistic_regime:
              type: string
              maxLength: 25
            country:
              type: string
              nullable: true
            equivalence:
              $ref: '#/components/schemas/Equivalence'
            high_school_transcript_translation:
              type: array
              items:
                type: string
              maxItems: 1
            high_school_diploma_translation:
              type: array
              items:
                type: string
              maxItems: 1
            enrolment_certificate_translation:
              type: array
              items:
                type: string
              maxItems: 1
            final_equivalence_decision:
              type: array
              items:
                type: string
              maxItems: 1
            equivalence_decision_proof:
              type: array
              items:
                type: string
              maxItems: 1
            restrictive_equivalence_daes:
              type: array
              items:
                type: string
              maxItems: 1
            restrictive_equivalence_admission_test:
              type: array
              items:
                type: string
              maxItems: 1
          required:
          - academic_graduation_year
          - linguistic_regime
          - country
          nullable: true
        high_school_diploma_alternative:
          type: object
          properties:
            first_cycle_admission_exam:
              type: array
              items:
                type: string
              maxItems: 1
          nullable: true
    DiplomaResults:
      enum:
      - NOT_KNOWN_YET_RESULT
      - LT_65_RESULT
      - BTW_65_AND_75_RESULT
      - GT_75_RESULT
      type: string
    BelgianCommunitiesOfEducation:
      enum:
      - ''
      - FRENCH_SPEAKING
      - FLEMISH_SPEAKING
      - GERMAN_SPEAKING
      type: string
    EducationalType:
      enum:
      - ''
      - TEACHING_OF_GENERAL_EDUCATION
      - TRANSITION_METHOD
      - ARTISTIC_TRANSITION
      - QUALIFICATION_METHOD
      - ARTISTIC_QUALIFICATION
      - PROFESSIONAL_EDUCATION
      - PROFESSIONAL_EDUCATION_AND_MATURITY_EXAM
      type: string
    ForeignDiplomaTypes:
      enum:
      - NATIONAL_BACHELOR
      - EUROPEAN_BACHELOR
      - INTERNATIONAL_BACCALAUREATE
      type: string
    Equivalence:
      enum:
      - ''
      - 'YES'
      - 'NO'
      - PENDING
      type: string
    LanguageKnowledge:
      type: object
      properties:
        language:
          type: string
          nullable: true
        listening_comprehension:
          $ref: '#/components/schemas/LanguageKnowledgeGrade'
          nullable: true
        speaking_ability:
          $ref: '#/components/schemas/LanguageKnowledgeGrade'
          nullable: true
        writing_ability:
          $ref: '#/components/schemas/LanguageKnowledgeGrade'
          nullable: true
        certificate:
          type: array
          items:
            type: string
          nullable: true
      required:
      - language
    LanguageKnowledgeGrade:
      enum:
      - A1
      - A2
      - B1
      - B2
      - C1
      - C2
      type: string
    CurriculumFile:
      type: object
      properties:
        curriculum:
          type: array
          items:
            type: string
          nullable: true
    Curriculum:
      type: object
      properties:
        professional_experiences:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                readOnly: true
              institute_name:
                type: string
                maxLength: 255
              start_date:
                type: string
                format: date
              end_date:
                type: string
                format: date
              type:
                $ref: '#/components/schemas/ActivityType'
              valuated_from:
                type: array
                items:
                  type: string
                readOnly: true
            required:
            - start_date
            - end_date
            - type
        educational_experiences:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                readOnly: true
              institute_name:
                type: string
                maxLength: 255
              program:
                type: string
                nullable: true
              education_name:
                type: string
                maxLength: 255
              educationalexperienceyear_set:
                type: array
                items:
                  type: object
                  properties:
                    academic_year:
                      type: integer
                      nullable: true
                  required:
                  - academic_year
              valuated_from:
                type: array
                items:
                  type: string
                readOnly: true
            required:
            - educationalexperienceyear_set
        file:
          type: object
          properties:
            curriculum:
              type: array
              items:
                type: string
              nullable: true
        minimal_year:
          type: integer
          readOnly: true
      required:
      - professional_experiences
      - educational_experiences
      - file
    ActivityType:
      enum:
      - WORK
      - INTERNSHIP
      - VOLUNTEERING
      - UNEMPLOYMENT
      - LANGUAGE_TRAVEL
      - OTHER
      type: string
    EducationalExperience:
      type: object
      properties:
        educationalexperienceyear_set:
          type: array
          items:
            type: object
            properties:
              academic_year:
                type: integer
                nullable: true
              registered_credit_number:
                type: number
                nullable: true
              acquired_credit_number:
                type: number
                nullable: true
                minimum: 0
              result:
                $ref: '#/components/schemas/Result'
              transcript:
                type: array
                items:
                  type: string
              transcript_translation:
                type: array
                items:
                  type: string
            required:
            - academic_year
        country:
          type: string
          nullable: true
        linguistic_regime:
          type: string
          nullable: true
        program:
          type: string
          nullable: true
        valuated_from:
          type: array
          items:
            type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          maxLength: 255
        institute_address:
          type: string
          maxLength: 255
        education_name:
          type: string
          maxLength: 255
        study_system:
          $ref: '#/components/schemas/StudySystem'
        evaluation_type:
          $ref: '#/components/schemas/EvaluationSystem'
        transcript_type:
          $ref: '#/components/schemas/TranscriptType'
        obtained_diploma:
          type: boolean
        obtained_grade:
          $ref: '#/components/schemas/Grade'
        graduate_degree:
          type: array
          items:
            type: string
        graduate_degree_translation:
          type: array
          items:
            type: string
        transcript:
          type: array
          items:
            type: string
        transcript_translation:
          type: array
          items:
            type: string
        bachelor_cycle_continuation:
          type: boolean
          nullable: true
        diploma_equivalence:
          type: array
          items:
            type: string
        rank_in_diploma:
          type: string
          maxLength: 30
        expected_graduation_date:
          type: string
          format: date
          nullable: true
        dissertation_title:
          type: string
          maxLength: 255
        dissertation_score:
          type: string
          maxLength: 30
        dissertation_summary:
          type: array
          items:
            type: string
      required:
      - educationalexperienceyear_set
      - country
      - transcript_type
      - obtained_diploma
    Result:
      enum:
      - ''
      - FAILURE
      - NO_RESULT
      - SUCCESS
      - SUCCESS_WITH_RESIDUAL_CREDITS
      type: string
    StudySystem:
      enum:
      - ''
      - CONTINUING_EDUCATION
      - FULL_TIME_EDUCATION
      type: string
    EvaluationSystem:
      enum:
      - ''
      - ECTS_CREDITS
      - NON_EUROPEAN_CREDITS
      - NO_CREDIT_SYSTEM
      type: string
    TranscriptType:
      enum:
      - ONE_A_YEAR
      - ONE_FOR_ALL_YEARS
      type: string
    Grade:
      enum:
      - ''
      - GREATER_DISTINCTION
      - GREAT_DISTINCTION
      - DISTINCTION
      - SATISFACTION
      - SUCCESS_WITHOUT_DISTINCTION
      type: string
    ProfessionalExperience:
      type: object
      properties:
        valuated_from:
          type: array
          items:
            type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/ActivityType'
        certificate:
          type: array
          items:
            type: string
        role:
          type: string
          maxLength: 255
        sector:
          $ref: '#/components/schemas/ActivitySector'
        activity:
          type: string
          maxLength: 255
      required:
      - start_date
      - end_date
      - type
    ActivitySector:
      enum:
      - ''
      - PUBLIC
      - PRIVATE
      - ASSOCIATIVE
      type: string
    PropositionDTO:
      type: object
      properties:
        uuid:
          type: string
        type_admission:
          type: string
        reference:
          type: string
        justification:
          type: string
        sigle_doctorat:
          type: string
        annee_doctorat:
          type: integer
        intitule_doctorat:
          type: string
        matricule_candidat:
          type: string
        code_secteur_formation:
          type: string
        commission_proximite:
          type: string
        type_financement:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        titre_projet:
          type: string
        resume_projet:
          type: string
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        langue_redaction_these:
          type: string
        institut_these:
          type: string
          format: uuid
          nullable: true
        lieu_these:
          type: string
        doctorat_deja_realise:
          type: string
        institution:
          type: string
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
        fiche_archive_signatures_envoyees:
          type: array
          items:
            type: string
        statut:
          type: string
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_languages:
              $ref: '#/components/schemas/ActionLink'
            update_languages:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_proposition:
              $ref: '#/components/schemas/ActionLink'
            update_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            update_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            add_approval:
              $ref: '#/components/schemas/ActionLink'
            add_member:
              $ref: '#/components/schemas/ActionLink'
            remove_member:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
            request_signatures:
              $ref: '#/components/schemas/ActionLink'
            approve_by_pdf:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_confirmation:
              $ref: '#/components/schemas/ActionLink'
            update_confirmation:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        erreurs:
          type: array
          items:
            type: object
            properties:
              status_code:
                type: string
              detail:
                type: string
      required:
      - uuid
      - type_admission
      - reference
      - sigle_doctorat
      - annee_doctorat
      - intitule_doctorat
      - matricule_candidat
      - code_secteur_formation
      - documents_projet
      - graphe_gantt
      - proposition_programme_doctoral
      - projet_formation_complementaire
      - lettres_recommandation
      - langue_redaction_these
      - lieu_these
      - doctorat_deja_realise
      - fiche_archive_signatures_envoyees
      - statut
      - erreurs
    CotutelleDTO:
      type: object
      properties:
        cotutelle:
          type: boolean
          nullable: true
        motivation:
          type: string
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - demande_ouverture
      - convention
      - autres_documents
    SupervisionDTO:
      type: object
      properties:
        signatures_promoteurs:
          type: array
          items:
            type: object
            properties:
              promoteur:
                type: object
                properties:
                  matricule:
                    type: string
                  nom:
                    type: string
                  prenom:
                    type: string
                  email:
                    type: string
                  titre:
                    type: string
                  institution:
                    type: string
                  ville:
                    type: string
                  pays:
                    type: string
                required:
                - matricule
                - nom
                - prenom
                - email
                - titre
                - institution
                - ville
                - pays
              statut:
                type: string
              date:
                type: string
                format: date-time
                nullable: true
              commentaire_externe:
                type: string
              commentaire_interne:
                type: string
              motif_refus:
                type: string
              pdf:
                type: array
                items:
                  type: string
            required:
            - promoteur
            - statut
            - pdf
        signatures_membres_CA:
          type: array
          items:
            type: object
            properties:
              membre_CA:
                type: object
                properties:
                  matricule:
                    type: string
                  nom:
                    type: string
                  prenom:
                    type: string
                  email:
                    type: string
                  titre:
                    type: string
                  institution:
                    type: string
                  ville:
                    type: string
                  pays:
                    type: string
                required:
                - matricule
                - nom
                - prenom
                - email
                - titre
                - institution
                - ville
                - pays
              statut:
                type: string
              date:
                type: string
                format: date-time
                nullable: true
              commentaire_externe:
                type: string
              commentaire_interne:
                type: string
              motif_refus:
                type: string
              pdf:
                type: array
                items:
                  type: string
            required:
            - membre_CA
            - statut
            - pdf
      required:
      - signatures_promoteurs
      - signatures_membres_CA
    ConfirmationPaperDTO:
      type: object
      properties:
        uuid:
          type: string
        date_limite:
          type: string
          format: date
        date:
          type: string
          format: date
          nullable: true
        rapport_recherche:
          type: array
          items:
            type: string
        demande_prolongation:
          type: object
          properties:
            nouvelle_echeance:
              type: string
              format: date
            justification_succincte:
              type: string
            lettre_justification:
              type: array
              items:
                type: string
            avis_cdd:
              type: string
          required:
          - nouvelle_echeance
          - justification_succincte
          - lettre_justification
          nullable: true
        proces_verbal_ca:
          type: array
          items:
            type: string
        attestation_reussite:
          type: array
          items:
            type: string
        attestation_echec:
          type: array
          items:
            type: string
        canevas_proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - uuid
      - date_limite
      - rapport_recherche
      - proces_verbal_ca
      - attestation_reussite
      - attestation_echec
      - canevas_proces_verbal_ca
      - avis_renouvellement_mandat_recherche
    ConfirmationPaperCanvas:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
      required:
      - uuid
    DoctorateDTO:
      type: object
      properties:
        uuid:
          type: string
        reference:
          type: string
        statut:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        intitule_formation:
          type: string
        titre_these:
          type: string
        type_financement:
          type: string
        bourse_recherche:
          type: string
        admission_acceptee_le:
          type: string
          format: date-time
          nullable: true
        matricule_doctorant:
          type: string
        noma_doctorant:
          type: string
        genre_doctorant:
          type: string
        prenom_doctorant:
          type: string
        nom_doctorant:
          type: string
        links:
          type: object
          properties:
            retrieve_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
            retrieve_confirmation:
              $ref: '#/components/schemas/ActionLink'
            update_confirmation:
              $ref: '#/components/schemas/ActionLink'
            update_confirmation_extension:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training:
              $ref: '#/components/schemas/ActionLink'
            add_training:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - uuid
      - reference
      - statut
      - sigle_formation
      - annee_formation
      - intitule_formation
      - titre_these
      - type_financement
      - matricule_doctorant
      - noma_doctorant
      - genre_doctorant
      - prenom_doctorant
      - nom_doctorant
    DoctoralTrainingActivity:
      oneOf:
      - $ref: '#/components/schemas/Conference'
      - $ref: '#/components/schemas/ConferenceCommunication'
      - $ref: '#/components/schemas/ConferencePublication'
      - $ref: '#/components/schemas/Residency'
      - $ref: '#/components/schemas/ResidencyCommunication'
      - $ref: '#/components/schemas/Communication'
      - $ref: '#/components/schemas/Publication'
      - $ref: '#/components/schemas/Service'
      - $ref: '#/components/schemas/Seminar'
      - $ref: '#/components/schemas/SeminarCommunication'
      - $ref: '#/components/schemas/Valorisation'
      - $ref: '#/components/schemas/Course'
      - $ref: '#/components/schemas/Paper'
      discriminator:
        propertyName: object_type
    Conference:
      type: object
      properties:
        type:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        participating_days:
          type: number
          nullable: true
          minimum: 0
        is_online:
          type: boolean
          nullable: true
        website:
          type: string
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        children:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/ConferenceCommunication'
            - $ref: '#/components/schemas/ConferencePublication'
            discriminator:
              propertyName: object_type
          readOnly: true
      required:
      - type
      - ects
      - title
      - start_date
      - end_date
      - participating_days
      - is_online
      - website
      - country
      - city
      - organizing_institution
      - comment
      - object_type
      - category
    ConferenceCommunication:
      type: object
      properties:
        type:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        title:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          enum:
          - ''
          - 'YES'
          - 'NO'
          - NA
          type: string
          nullable: true
        acceptation_proof:
          type: array
          items:
            type: string
        dial_reference:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        parent:
          type: string
      required:
      - type
      - ects
      - title
      - committee
      - dial_reference
      - comment
      - object_type
      - category
      - parent
    ConferencePublication:
      type: object
      properties:
        type:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        title:
          type: string
        authors:
          type: string
        role:
          type: string
        keywords:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          enum:
          - ''
          - 'YES'
          - 'NO'
          - NA
          type: string
          nullable: true
        journal:
          type: string
        dial_reference:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        parent:
          type: string
      required:
      - type
      - ects
      - title
      - authors
      - role
      - keywords
      - committee
      - journal
      - dial_reference
      - comment
      - object_type
      - category
      - parent
    Residency:
      type: object
      properties:
        type:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        subtitle:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        children:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/ResidencyCommunication'
            discriminator:
              propertyName: object_type
          readOnly: true
      required:
      - type
      - ects
      - subtitle
      - start_date
      - end_date
      - country
      - city
      - comment
      - object_type
      - category
    ResidencyCommunication:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        organizing_institution:
          type: string
        website:
          type: string
        subtitle:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        summary:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        parent:
          type: string
      required:
      - type
      - subtype
      - title
      - start_date
      - is_online
      - organizing_institution
      - website
      - subtitle
      - ects
      - comment
      - object_type
      - category
      - parent
    Communication:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        website:
          type: string
        subtitle:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          enum:
          - ''
          - 'YES'
          - 'NO'
          - NA
          type: string
          nullable: true
        acceptation_proof:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        dial_reference:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - type
      - subtype
      - title
      - start_date
      - is_online
      - country
      - city
      - organizing_institution
      - website
      - subtitle
      - committee
      - dial_reference
      - ects
      - comment
      - object_type
      - category
    Publication:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        authors:
          type: string
        role:
          type: string
        keywords:
          type: string
        summary:
          type: array
          items:
            type: string
        journal:
          type: string
        publication_status:
          enum:
          - ''
          - UNSUBMITTED
          - SUBMITTED
          - IN_REVIEW
          - ACCEPTED
          - PUBLISHED
          type: string
          nullable: true
        dial_reference:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - type
      - title
      - start_date
      - authors
      - role
      - keywords
      - journal
      - publication_status
      - dial_reference
      - ects
      - comment
      - object_type
      - category
    Service:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        organizing_institution:
          type: string
        hour_volume:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - type
      - title
      - start_date
      - end_date
      - organizing_institution
      - hour_volume
      - ects
      - comment
      - object_type
      - category
    Seminar:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        hour_volume:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        children:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/SeminarCommunication'
            discriminator:
              propertyName: object_type
          readOnly: true
      required:
      - type
      - title
      - start_date
      - end_date
      - hour_volume
      - ects
      - object_type
      - category
    SeminarCommunication:
      type: object
      properties:
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        website:
          type: string
        authors:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
        parent:
          type: string
      required:
      - title
      - start_date
      - is_online
      - country
      - city
      - organizing_institution
      - website
      - authors
      - comment
      - object_type
      - category
      - parent
    Valorisation:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        summary:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - title
      - subtitle
      - ects
      - comment
      - object_type
      - category
    Course:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        subtitle:
          type: string
        organizing_institution:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        hour_volume:
          type: string
        authors:
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - type
      - title
      - subtitle
      - organizing_institution
      - start_date
      - end_date
      - hour_volume
      - authors
      - ects
      - comment
      - object_type
      - category
    Paper:
      type: object
      properties:
        type:
          enum:
          - CONFIRMATION_PAPER
          - PRIVATE_DEFENSE
          - PUBLIC_DEFENSE
          type: string
        ects:
          type: number
          nullable: true
          minimum: 0
        comment:
          type: string
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorieActivite'
        status:
          $ref: '#/components/schemas/StatutActivite'
          readOnly: true
        doctorate:
          type: integer
          writeOnly: true
      required:
      - type
      - ects
      - comment
      - object_type
      - category
    DoctoralTrainingConfig:
      type: object
      properties:
        category_labels:
          type: object
        conference_types:
          type: object
        conference_publication_types:
          type: object
        communication_types:
          type: object
        seminar_types:
          type: object
        publication_types:
          type: object
        service_types:
          type: object
        residency_types:
          type: object
        course_types:
          type: object
    SectorDTO:
      type: object
      properties:
        sigle:
          type: string
          readOnly: true
        intitule:
          type: string
          readOnly: true
    DoctoratDTO:
      type: object
      properties:
        sigle:
          type: string
        annee:
          type: integer
        intitule:
          type: string
        sigle_entite_gestion:
          type: string
      required:
      - sigle
      - annee
      - intitule
      - sigle_entite_gestion
    Tutor:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        global_id:
          type: string
          readOnly: true
    Person:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        global_id:
          type: string
          maxLength: 10
    PropositionIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
    InitierPropositionCommand:
      type: object
      properties:
        type_admission:
          $ref: '#/components/schemas/AdmissionType'
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        matricule_candidat:
          type: string
        justification:
          type: string
        commission_proximite:
          $ref: '#/components/schemas/ChoixCommissionProximite'
        type_financement:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        titre_projet:
          type: string
        resume_projet:
          type: string
        institut_these:
          type: string
          nullable: true
        lieu_these:
          type: string
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        langue_redaction_these:
          $ref: '#/components/schemas/ChoixLangueRedactionThese'
          default: UNDECIDED
        doctorat_deja_realise:
          $ref: '#/components/schemas/ChoixDoctoratDejaRealise'
          default: 'NO'
        institution:
          type: string
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
      required:
      - type_admission
      - sigle_formation
      - annee_formation
      - matricule_candidat
      - commission_proximite
      - documents_projet
      - graphe_gantt
      - proposition_programme_doctoral
      - projet_formation_complementaire
      - lettres_recommandation
    AdmissionType:
      enum:
      - ADMISSION
      - PRE_ADMISSION
      type: string
    ChoixCommissionProximite:
      enum:
      - ''
      - ECONOMY
      - MANAGEMENT
      - ECLI
      - GIM
      - NRSC
      - BCM
      - SPSS
      - DENT
      - DFAR
      - MOTR
      - PHYSICS
      - CHEMISTRY
      - MATHEMATICS
      - STATISTICS
      - BIOLOGY
      - GEOGRAPHY
      type: string
    ChoixLangueRedactionThese:
      enum:
      - FRENCH
      - ENGLISH
      - OTHER
      - UNDECIDED
      type: string
    ChoixDoctoratDejaRealise:
      enum:
      - 'YES'
      - 'NO'
      - PARTIAL
      type: string
    SupervisionActor:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ActorType'
        member:
          type: string
      required:
      - type
      - member
    ActorType:
      enum:
      - PROMOTER
      - CA_MEMBER
      type: string
    ApprouverPropositionCommand:
      type: object
      properties:
        matricule:
          type: string
        institut_these:
          type: string
          nullable: true
        commentaire_interne:
          type: string
        commentaire_externe:
          type: string
      required:
      - matricule
    ApprouverPropositionParPdfCommand:
      type: object
      properties:
        matricule:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - matricule
      - pdf
    DoctorateIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
    SubmitConfirmationPaperExtensionRequestCommand:
      type: object
      properties:
        nouvelle_echeance:
          type: string
          format: date
        justification_succincte:
          type: string
        lettre_justification:
          type: array
          items:
            type: string
      required:
      - nouvelle_echeance
      - justification_succincte
      - lettre_justification
    CategorieActivite:
      enum:
      - CONFERENCE
      - COMMUNICATION
      - SEMINAR
      - PUBLICATION
      - SERVICE
      - RESIDENCY
      - VAE
      - COURSE
      - PAPER
      type: string
    StatutActivite:
      enum:
      - NON_SOUMISE
      - SOUMISE
      - ACCEPTEE
      - REFUSEE
      type: string
    DoctoralTrainingBatch:
      type: object
      properties:
        activity_uuids:
          type: array
          items:
            type: string
      required:
      - activity_uuids
    CompleterPropositionCommand:
      type: object
      properties:
        uuid:
          type: string
        type_admission:
          $ref: '#/components/schemas/AdmissionType'
        justification:
          type: string
        commission_proximite:
          $ref: '#/components/schemas/ChoixCommissionProximite'
        type_financement:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        titre_projet:
          type: string
        resume_projet:
          type: string
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        langue_redaction_these:
          $ref: '#/components/schemas/ChoixLangueRedactionThese'
          default: UNDECIDED
        institut_these:
          type: string
          nullable: true
        lieu_these:
          type: string
        doctorat_deja_realise:
          $ref: '#/components/schemas/ChoixDoctoratDejaRealise'
          default: 'NO'
        institution:
          type: string
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
      required:
      - uuid
      - type_admission
      - commission_proximite
      - documents_projet
      - graphe_gantt
      - proposition_programme_doctoral
      - projet_formation_complementaire
      - lettres_recommandation
    DefinirCotutelleCommand:
      type: object
      properties:
        motivation:
          type: string
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - demande_ouverture
      - convention
      - autres_documents
    RefuserPropositionCommand:
      type: object
      properties:
        matricule:
          type: string
        motif_refus:
          type: string
        commentaire_interne:
          type: string
        commentaire_externe:
          type: string
      required:
      - matricule
      - motif_refus
    SubmitConfirmationPaperCommand:
      type: object
      properties:
        date:
          type: string
          format: date
        rapport_recherche:
          type: array
          items:
            type: string
        proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - date
      - rapport_recherche
      - proces_verbal_ca
      - avis_renouvellement_mandat_recherche
    CompleteConfirmationPaperByPromoterCommand:
      type: object
      properties:
        proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - proces_verbal_ca
      - avis_renouvellement_mandat_recherche
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
    AcceptedLanguageEnum:
      type: string
      enum:
      - en
      - fr-be
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  parameters:
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: The header advertises which languages the client is able to understand,
        and which locale variant is preferred. (By languages, we mean natural languages,
        such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
servers:
- url: https://{environment}.osis.uclouvain.be/api/v1/admission/
  variables:
    environment:
      default: dev
      enum:
      - dev
      - qa
      - test
- url: https://osis.uclouvain.be/api/v1/admission/
  description: Production server
security:
- Token: []
