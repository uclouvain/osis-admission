openapi: 3.0.3
info:
  title: Admission API
  version: 1.1.2dev1540
  description: This API delivers data for the Admission project.
  contact:
    name: UCLouvain - OSIS
    url: https://github.com/uclouvain/osis
paths:
  /autocomplete/continuing-education:
    get:
      operationId: listFormationContinueDTOs
      description: Autocomplete to find a continuing education
      parameters:
      - name: acronym_or_name
        required: true
        in: query
        description: The name or the acronym of the training
        schema:
          type: string
      - name: campus
        required: false
        in: query
        description: The identifier of the campus where the training takes place
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormationContinueDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/diplomatic-post:
    get:
      operationId: listDiplomaticPosts
      description: Autocomplete diplomatic posts
      parameters:
      - name: country
        required: false
        in: query
        description: If specified, the diplomatic posts of this country are returned
          first
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: The term to search the diplomatic post on (its name)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiplomaticPostList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/general-education:
    get:
      operationId: listFormationGeneraleDTOs
      description: Autocomplete to find a general education
      parameters:
      - name: acronym_or_name
        required: true
        in: query
        description: The name or the acronym of the training
        schema:
          type: string
      - name: campus
        required: false
        in: query
        description: The identifier of the campus where the training takes place
        schema:
          type: string
      - name: type
        required: true
        in: query
        description: The type of the training
        schema:
          type: string
          enum:
          - BACHELIER
          - MASTER
          - AGREGATION_CAPES
          - CERTIFICAT
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormationGeneraleDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/person:
    get:
      operationId: listPeople
      description: Autocomplete person
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/sector:
    get:
      operationId: listSectorDTOs
      description: Autocomplete sectors
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectorDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /autocomplete/sector/{sigle}/doctorates:
    get:
      operationId: listDoctoratDTOs
      description: Autocomplete doctorates given a sector
      parameters:
      - name: acronym_or_name
        required: true
        in: query
        description: The name or the acronym of the training
        schema:
          type: string
      - name: campus
        required: false
        in: query
        description: The identifier of the campus where the training takes place
        schema:
          type: string
      - in: path
        name: sigle
        schema:
          type: string
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoratDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/tutor:
    get:
      operationId: listTutors
      description: Autocomplete tutors
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTutorList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /campus:
    get:
      operationId: listCampus
      description: Retrieves the UCLouvain campuses
      tags:
      - campus
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campus'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /campus/{uuid}:
    get:
      operationId: retrieveCampus
      description: Retrieves a campus
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - campus
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campus'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /candidate/{noma}/application_fees_payment_method:
    get:
      operationId: retrievePaymentMethod
      description: Get the payment method of the application fees
      parameters:
      - in: path
        name: noma
        schema:
          type: string
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - candidate
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /continuing-education/{sigle}/{annee}:
    get:
      operationId: retrieveInformationsSpecifiquesFormationContinueDTO
      parameters:
      - in: path
        name: annee
        schema:
          type: integer
        required: true
      - in: path
        name: sigle
        schema:
          type: string
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - continuing-education
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationsSpecifiquesFormationContinueDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /coordonnees:
    get:
      operationId: retrieveCoordonnees
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
    put:
      operationId: updateCoordonnees
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /curriculum:
    get:
      operationId: retrieveCurriculumDetails
      description: Return the curriculum experiences of a person with the mandatory
        years to complete.
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumDetails'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /curriculum/educational:
    post:
      operationId: createEducationalExperience
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /curriculum/educational/{experience_id}:
    get:
      operationId: retrieveEducationalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateEducationalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyEducationalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /curriculum/professional:
    post:
      operationId: createProfessionalExperience
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /curriculum/professional/{experience_id}:
    get:
      operationId: retrieveProfessionalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateProfessionalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyProfessionalExperience
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /dashboard:
    get:
      operationId: retrieve_dashboard
      description: Get the actions links for the application
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /diplomatic-post/{code}:
    get:
      operationId: retrieveDiplomaticPost
      description: Retrieves a diplomatic post
      parameters:
      - in: path
        name: code
        schema:
          type: integer
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - diplomatic-post
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiplomaticPost'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /identification:
    get:
      operationId: retrieve_identification_dto
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /languages_knowledge:
    get:
      operationId: listLanguageKnowledges
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
    post:
      operationId: createLanguageKnowledge
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LanguageKnowledge'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /person:
    get:
      operationId: retrievePersonIdentification
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
    put:
      operationId: updatePersonIdentification
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions:
    get:
      operationId: list_propositions
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionSearch'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
    post:
      operationId: create_proposition
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/continuing-education:
    post:
      operationId: create_continuing_training_choice
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitierPropositionContinueCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/continuing-education/{uuid}:
    get:
      operationId: retrieve_continuing_education_proposition
      description: Get a single proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuingEducationPropositionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroy_continuing_education_proposition
      description: Soft-Delete a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/{tab}/specific-question:
    get:
      operationId: list_continuing_specific_questions
      parameters:
      - in: path
        name: tab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecificQuestion'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/coordonnees:
    get:
      operationId: retrieveCoordonneesContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateCoordonneesContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/curriculum:
    get:
      operationId: retrieveCurriculumDetailsContinuingEducationAdmission
      description: Return the curriculum experiences of a person with the mandatory
        years to complete.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumDetails'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateContinuingEducationCompleterCurriculumCommandAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuingEducationCompleterCurriculumCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuingEducationCompleterCurriculumCommand'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/curriculum/educational:
    post:
      operationId: createEducationalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/curriculum/educational/{experience_id}:
    get:
      operationId: retrieveEducationalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateEducationalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyEducationalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/curriculum/professional:
    post:
      operationId: createProfessionalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/curriculum/professional/{experience_id}:
    get:
      operationId: retrieveProfessionalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateProfessionalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyProfessionalExperienceContinuingEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/documents:
    get:
      operationId: list_continuing_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecificQuestionsList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: create_continuing_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterEmplacementsDocumentsParCandidatCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/pdf-recap:
    get:
      operationId: retrieve_continuing_education_proposition_pdf_recap
      description: Generate the proposition recap and return a file read token
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PDFRecap'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/person:
    get:
      operationId: retrievePersonIdentificationContinuingEducationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updatePersonIdentificationContinuingEducationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/secondary-studies:
    get:
      operationId: retrieveHighSchoolDiplomaContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateHighSchoolDiplomaContinuingEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/specific-question:
    put:
      operationId: update_continuing_specific_question
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierQuestionsSpecifiquesFormationContinueCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/submit:
    get:
      operationId: verify_continuing_education_proposition
      description: Check the proposition to be OK with all validators.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionErrors'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: submit_continuing_education_proposition
      description: Submit the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProposition'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/continuing-education/{uuid}/training-choice:
    get:
      operationId: list_continuing_training_choices
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_continuing_training_choice
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierChoixFormationContinueCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: propositions_continuing_education_training_choice_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropositionIdentityDTO'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate:
    post:
      operationId: create_doctorate_training_choice
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitierPropositionCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/doctorate/{uuid}:
    get:
      operationId: retrieve_doctorate_proposition
      description: Get a single proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoratePropositionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroy_doctorate_proposition
      description: Soft-Delete a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/{tab}/specific-question:
    get:
      operationId: list_doctorate_specific_questions
      parameters:
      - in: path
        name: tab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecificQuestion'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/accounting:
    get:
      operationId: retrieve_accounting
      description: Get additional data conditioning the required accounting fields
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateEducationAccountingDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_accounting
      description: Edit the accounting of a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterComptabilitePropositionDoctoraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/coordonnees:
    get:
      operationId: retrieveCoordonneesAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateCoordonneesAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/cotutelle:
    get:
      operationId: retrieve_cotutelle
      description: Get the cotutelle of a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CotutelleDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_cotutelle
      description: Set the cotutelle of a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefinirCotutelleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/curriculum:
    get:
      operationId: retrieveCurriculumDetailsAdmission
      description: Return the curriculum experiences of a person with the mandatory
        years to complete.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumDetails'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateDoctoratCompleterCurriculumCommandAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoratCompleterCurriculumCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoratCompleterCurriculumCommand'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/curriculum/educational:
    post:
      operationId: createEducationalExperienceAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/curriculum/educational/{experience_id}:
    get:
      operationId: retrieveEducationalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateEducationalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyEducationalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/curriculum/professional:
    post:
      operationId: createProfessionalExperienceAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/curriculum/professional/{experience_id}:
    get:
      operationId: retrieveProfessionalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateProfessionalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyProfessionalExperienceAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/doctorate:
    get:
      operationId: retrieveDoctorateDTO
      description: Get the doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorateDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/documents:
    get:
      operationId: list_doctorate_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecificQuestionsList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: create_doctorate_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterEmplacementsDocumentsParCandidatCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/languages_knowledge:
    get:
      operationId: listLanguageKnowledgesAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: createLanguageKnowledgeAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LanguageKnowledge'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageKnowledge'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/pdf-recap:
    get:
      operationId: retrieve_doctorate_education_proposition_pdf_recap
      description: Generate the proposition recap and return a file read token
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PDFRecap'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/person:
    get:
      operationId: retrievePersonIdentificationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updatePersonIdentificationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/project:
    get:
      operationId: retrieve_project
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_project
      description: Edit the project
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterPropositionCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/secondary_studies:
    get:
      operationId: retrieveHighSchoolDiplomaAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateHighSchoolDiplomaAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/submit:
    get:
      operationId: verify_proposition
      description: Check the proposition to be OK with all validators.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionErrors'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: submit_proposition
      description: Submit the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProposition'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision:
    get:
      operationId: retrieve_supervision
      description: Get the supervision group of a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: remove_member
      description: Remove a supervision group member for a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisionActorReference'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: add_member
      description: Add a supervision group member for a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifierSupervisionActor'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: edit_external_member
      description: Edit an external supervision group member for a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModifierMembreSupervisionExterne'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/approve:
    post:
      operationId: approve_proposition
      description: Approve the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprouverPropositionCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: reject_proposition
      description: Reject the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefuserPropositionCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/approve-by-pdf:
    post:
      operationId: approve_by_pdf
      description: Approve the proposition with a pdf file.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprouverPropositionParPdfCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/external/{token}:
    get:
      operationId: get_external_proposition
      description: Returns necessary info about proposition while checking token.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      tags:
      - propositions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSupervisionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: approve_external_proposition
      description: Approve the proposition.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprouverPropositionCommand'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: reject_external_proposition
      description: Reject the proposition.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefuserPropositionCommand'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/request-signatures:
    post:
      operationId: create_signatures
      description: Ask for all promoters and members to sign the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_signatures
      description: Resend an invitation for and external member.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenvoyerInvitationSignatureExterne'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/set-reference-promoter:
    put:
      operationId: set_reference_promoter
      description: Set a supervision group member as reference promoter
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignerPromoteurReferenceCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/supervision/submit-ca:
    post:
      operationId: submit_ca
      description: Submit the new CA
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/training_choice:
    put:
      operationId: update_doctorate_training_choice
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierTypeAdmissionDoctoraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: propositions_doctorate_training_choice_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropositionIdentityDTO'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/{uuid}/verify_project:
    get:
      operationId: retrieve_verify_project
      description: Check the project to be OK with all validators.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status_code:
                      type: string
                    detail:
                      type: string
          description: Project verification errors
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/doctorate/pre-admission-list:
    get:
      operationId: list_doctorate_pre_admissions
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoratePreAdmissionSearchDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/general-education:
    post:
      operationId: create_general_training_choice
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitierPropositionGeneraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/general-education/{uuid}:
    get:
      operationId: retrieve_general_education_proposition
      description: Get a single proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralEducationPropositionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroy_general_education_proposition
      description: Soft-Delete a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/{tab}/specific-question:
    get:
      operationId: list_general_specific_questions
      parameters:
      - in: path
        name: tab
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecificQuestion'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/accounting:
    get:
      operationId: retrieve_general_accounting
      description: Get additional data conditioning the required accounting fields
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralEducationAccountingDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_general_accounting
      description: Edit the accounting of a proposition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterComptabilitePropositionGeneraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/coordonnees:
    get:
      operationId: retrieveCoordonneesGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateCoordonneesGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordonnees'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordonnees'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/curriculum:
    get:
      operationId: retrieveCurriculumDetailsGeneralEducationAdmission
      description: Return the curriculum experiences of a person with the mandatory
        years to complete.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculumDetails'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateGeneralEducationCompleterCurriculumCommandAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralEducationCompleterCurriculumCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralEducationCompleterCurriculumCommand'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/curriculum/educational:
    post:
      operationId: createEducationalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/curriculum/educational/{experience_id}:
    get:
      operationId: retrieveEducationalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateEducationalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyEducationalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/curriculum/professional:
    post:
      operationId: createProfessionalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/curriculum/professional/{experience_id}:
    get:
      operationId: retrieveProfessionalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateProfessionalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalExperience'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalExperience'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroyProfessionalExperienceGeneralEducationAdmission
      parameters:
      - in: path
        name: experience_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/documents:
    get:
      operationId: list_general_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecificQuestionsList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: create_general_documents
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleterEmplacementsDocumentsParCandidatCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/exam:
    get:
      operationId: retrieve_exam_general_education_admission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_exam_general_education_admission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/identification:
    get:
      operationId: retrieve_general_identification
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/list-application-fees:
    get:
      operationId: list_application_fees_payments
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaiementDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/open-application-fees-payment:
    post:
      operationId: open_application_fees_payment_after_submission
      description: Open the payment of the application fee of the proposition after
        its submission.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaiementDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: open_application_fees_payment_after_request
      description: Open the payment of the application fee of the proposition after
        a manager request.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaiementDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/pdf-recap:
    get:
      operationId: retrieve_general_education_proposition_pdf_recap
      description: Generate the proposition recap and return a file read token
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PDFRecap'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/person:
    get:
      operationId: retrievePersonIdentificationGeneralEducationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updatePersonIdentificationGeneralEducationAdmission
      description: |-
        This Mixin is used to display business validation messages (business Exceptions)
        inside defined fields in the attribute 'field_name_by_exception'
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdentification'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonIdentification'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/pool-questions:
    get:
      operationId: retrieve_pool_questions
      description: Get relevant pool questions
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolQuestions'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_pool_questions
      description: Update pool questions
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolQuestions'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolQuestions'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/secondary-studies:
    get:
      operationId: retrieveHighSchoolDiplomaGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateHighSchoolDiplomaGeneralEducationAdmission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/specific-question:
    put:
      operationId: update_general_specific_question
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierQuestionsSpecifiquesFormationGeneraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/submit:
    get:
      operationId: verify_general_education_proposition
      description: Check the proposition to be OK with all validators.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionErrors'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: submit_general_education_proposition
      description: Submit the proposition.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProposition'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralEducationPropositionIdentityWithStatus'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/general-education/{uuid}/training-choice:
    get:
      operationId: list_general_training_choices
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_general_training_choice
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierChoixFormationGeneraleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: propositions_general_education_training_choice_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - propositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropositionIdentityDTO'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /propositions/permissions:
    get:
      operationId: detail_proposition_create_permissions
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropositionCreatePermissions'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /propositions/specific-enrolment-periods:
    get:
      operationId: retrieveSpecificEnrolmentPeriods
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificEnrolmentPeriods'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /secondary_studies:
    get:
      operationId: retrieveHighSchoolDiploma
      tags:
      - person
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
    put:
      operationId: updateHighSchoolDiploma
      tags:
      - person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HighSchoolDiploma'
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighSchoolDiploma'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /supervised_propositions:
    get:
      operationId: list_supervised_propositions
      tags:
      - propositions
      security:
      - tokenAuth: []
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoratePropositionSearchDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
components:
  schemas:
    ActorTypeEnum:
      enum:
      - PROMOTER
      - CA_MEMBER
      type: string
      description: |-
        * `PROMOTER` - Promoteur
        * `CA_MEMBER` - Membre du comité d'accompagnement
    AdressePersonnelleDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        rue:
          type: string
        code_postal:
          type: string
        ville:
          type: string
        pays:
          type: string
        nom_pays:
          type: string
        numero_rue:
          type: string
        boite_postale:
          type: string
        destinataire:
          type: string
      required:
      - boite_postale
      - code_postal
      - destinataire
      - nom_pays
      - numero_rue
      - pays
      - rue
      - ville
    ApprouverPropositionCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_membre:
          type: string
        institut_these:
          type: string
          nullable: true
        commentaire_interne:
          type: string
        commentaire_externe:
          type: string
      required:
      - uuid_membre
    ApprouverPropositionParPdfCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_membre:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - pdf
      - uuid_membre
    BelgianHighSchoolDiploma:
      type: object
      properties:
        academic_graduation_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        high_school_diploma:
          type: array
          items:
            type: string
          title: Diplôme d'études secondaires
          maxItems: 1
        community:
          nullable: true
          title: Dans quelle communauté avez-vous suivi la dernière année d'études
            secondaires (ou suivez-vous actuellement) ?
          oneOf:
          - $ref: '#/components/schemas/CommunityEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        educational_type:
          nullable: true
          title: Quel type d'enseignement avez-vous suivi (ou suivez-vous actuellement) ?
          oneOf:
          - $ref: '#/components/schemas/EducationalTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        educational_other:
          type: string
          title: Autre enseignement, précisez
          maxLength: 75
        institute:
          type: string
          nullable: true
        other_institute_name:
          type: string
          title: Autre établissement
          description: Si vous ne trouvez pas votre institut dans la liste, merci
            de le préciser ici
          maxLength: 500
        other_institute_address:
          type: string
          title: Adresse autre établissement
          maxLength: 500
      required:
      - academic_graduation_year
    BlankEnum:
      enum:
      - ''
    BourseDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        nom_court:
          type: string
        nom_long:
          type: string
        type:
          type: string
      required:
      - nom_court
      - nom_long
      - type
      - uuid
    Campus:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    CampusDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
          format: uuid
        nom:
          type: string
      required:
      - nom
      - uuid
    CivilStateEnum:
      enum:
      - LEGAL_COHABITANT
      - SINGLE
      - DIVORCED
      - MARRIED
      - SEPARATE
      - WIDOWED
      type: string
      description: |-
        * `LEGAL_COHABITANT` - Cohabitant·e légal·e
        * `SINGLE` - Célibataire
        * `DIVORCED` - Divorcé·e
        * `MARRIED` - Marié·e
        * `SEPARATE` - Séparé·e
        * `WIDOWED` - Veuf·ve
    CommissionProximiteEnum:
      enum:
      - ECONOMY
      - MANAGEMENT
      - ECLI
      - BCGIM
      - NRSC
      - SPSS
      - DENT
      - DFAR
      - MOTR
      - PHYSICS
      - CHEMISTRY
      - MATHEMATICS
      - STATISTICS
      - BIOLOGY
      - GEOGRAPHY
      type: string
      description: |-
        * `ECONOMY` - Economie
        * `MANAGEMENT` - Gestion
        * `ECLI` - Commission de proximité de recherche expérimentale et clinique (ECLI)
        * `BCGIM` - Commission de proximité de biochimie, biologie cellulaire et moléculaire, génétique, immunologie (BCGIM)
        * `NRSC` - Commission de proximité de neurosciences (NRSC)
        * `SPSS` - Commission de proximité de santé publique, santé et société (SPSS)
        * `DENT` - Commission de proximité de sciences dentaires (DENT)
        * `DFAR` - Commission de proximité de sciences pharmaceutiques (DFAR)
        * `MOTR` - Commission de proximité de sciences de la motricité (MOTR)
        * `PHYSICS` - Physique
        * `CHEMISTRY` - Chimie
        * `MATHEMATICS` - Mathématiques
        * `STATISTICS` - Statistiques
        * `BIOLOGY` - Biologie
        * `GEOGRAPHY` - Géographie
    CommunityEnum:
      enum:
      - FRENCH_SPEAKING
      - FLEMISH_SPEAKING
      - GERMAN_SPEAKING
      type: string
      description: |-
        * `FRENCH_SPEAKING` - Communauté française
        * `FLEMISH_SPEAKING` - Communauté flamande
        * `GERMAN_SPEAKING` - Communauté germanophone
    CompleterComptabilitePropositionDoctoraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        attestation_absence_dette_etablissement:
          type: array
          items:
            type: string
        type_situation_assimilation:
          type: string
        sous_type_situation_assimilation_1:
          type: string
        carte_resident_longue_duree:
          type: array
          items:
            type: string
        carte_cire_sejour_illimite_etranger:
          type: array
          items:
            type: string
        carte_sejour_membre_ue:
          type: array
          items:
            type: string
        carte_sejour_permanent_membre_ue:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_2:
          type: string
        carte_a_b_refugie:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides:
          type: array
          items:
            type: string
        attestation_immatriculation:
          type: array
          items:
            type: string
        preuve_statut_apatride:
          type: array
          items:
            type: string
        carte_a_b:
          type: array
          items:
            type: string
        decision_protection_subsidiaire:
          type: array
          items:
            type: string
        decision_protection_temporaire:
          type: array
          items:
            type: string
        carte_a:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_3:
          type: string
        titre_sejour_3_mois_professionel:
          type: array
          items:
            type: string
        fiches_remuneration:
          type: array
          items:
            type: string
        titre_sejour_3_mois_remplacement:
          type: array
          items:
            type: string
        preuve_allocations_chomage_pension_indemnite:
          type: array
          items:
            type: string
        attestation_cpas:
          type: array
          items:
            type: string
        relation_parente:
          type: string
        sous_type_situation_assimilation_5:
          type: string
        composition_menage_acte_naissance:
          type: array
          items:
            type: string
        acte_tutelle:
          type: array
          items:
            type: string
        composition_menage_acte_mariage:
          type: array
          items:
            type: string
        attestation_cohabitation_legale:
          type: array
          items:
            type: string
        carte_identite_parent:
          type: array
          items:
            type: string
        titre_sejour_longue_duree_parent:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides_decision_protection_parent:
          type: array
          items:
            type: string
        titre_sejour_3_mois_parent:
          type: array
          items:
            type: string
        fiches_remuneration_parent:
          type: array
          items:
            type: string
        attestation_cpas_parent:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_6:
          type: string
        decision_bourse_cfwb:
          type: array
          items:
            type: string
        attestation_boursier:
          type: array
          items:
            type: string
        titre_identite_sejour_longue_duree_ue:
          type: array
          items:
            type: string
        titre_sejour_belgique:
          type: array
          items:
            type: string
        etudiant_solidaire:
          type: boolean
          nullable: true
        type_numero_compte:
          type: string
        numero_compte_iban:
          type: string
          maxLength: 34
        iban_valide:
          type: boolean
          nullable: true
        numero_compte_autre_format:
          type: string
          maxLength: 255
        code_bic_swift_banque:
          type: string
        prenom_titulaire_compte:
          type: string
          maxLength: 128
        nom_titulaire_compte:
          type: string
          maxLength: 128
      required:
      - acte_tutelle
      - annexe_25_26_refugies_apatrides
      - annexe_25_26_refugies_apatrides_decision_protection_parent
      - attestation_absence_dette_etablissement
      - attestation_boursier
      - attestation_cohabitation_legale
      - attestation_cpas
      - attestation_cpas_parent
      - attestation_immatriculation
      - carte_a
      - carte_a_b
      - carte_a_b_refugie
      - carte_cire_sejour_illimite_etranger
      - carte_identite_parent
      - carte_resident_longue_duree
      - carte_sejour_membre_ue
      - carte_sejour_permanent_membre_ue
      - composition_menage_acte_mariage
      - composition_menage_acte_naissance
      - decision_bourse_cfwb
      - decision_protection_subsidiaire
      - decision_protection_temporaire
      - fiches_remuneration
      - fiches_remuneration_parent
      - preuve_allocations_chomage_pension_indemnite
      - preuve_statut_apatride
      - titre_identite_sejour_longue_duree_ue
      - titre_sejour_3_mois_parent
      - titre_sejour_3_mois_professionel
      - titre_sejour_3_mois_remplacement
      - titre_sejour_belgique
      - titre_sejour_longue_duree_parent
      - uuid_proposition
    CompleterComptabilitePropositionGeneraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        attestation_absence_dette_etablissement:
          type: array
          items:
            type: string
        demande_allocation_d_etudes_communaute_francaise_belgique:
          type: boolean
          nullable: true
        enfant_personnel:
          type: boolean
          nullable: true
        attestation_enfant_personnel:
          type: array
          items:
            type: string
        type_situation_assimilation:
          type: string
        sous_type_situation_assimilation_1:
          type: string
        carte_resident_longue_duree:
          type: array
          items:
            type: string
        carte_cire_sejour_illimite_etranger:
          type: array
          items:
            type: string
        carte_sejour_membre_ue:
          type: array
          items:
            type: string
        carte_sejour_permanent_membre_ue:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_2:
          type: string
        carte_a_b_refugie:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides:
          type: array
          items:
            type: string
        attestation_immatriculation:
          type: array
          items:
            type: string
        preuve_statut_apatride:
          type: array
          items:
            type: string
        carte_a_b:
          type: array
          items:
            type: string
        decision_protection_subsidiaire:
          type: array
          items:
            type: string
        decision_protection_temporaire:
          type: array
          items:
            type: string
        carte_a:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_3:
          type: string
        titre_sejour_3_mois_professionel:
          type: array
          items:
            type: string
        fiches_remuneration:
          type: array
          items:
            type: string
        titre_sejour_3_mois_remplacement:
          type: array
          items:
            type: string
        preuve_allocations_chomage_pension_indemnite:
          type: array
          items:
            type: string
        attestation_cpas:
          type: array
          items:
            type: string
        relation_parente:
          type: string
        sous_type_situation_assimilation_5:
          type: string
        composition_menage_acte_naissance:
          type: array
          items:
            type: string
        acte_tutelle:
          type: array
          items:
            type: string
        composition_menage_acte_mariage:
          type: array
          items:
            type: string
        attestation_cohabitation_legale:
          type: array
          items:
            type: string
        carte_identite_parent:
          type: array
          items:
            type: string
        titre_sejour_longue_duree_parent:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides_decision_protection_parent:
          type: array
          items:
            type: string
        titre_sejour_3_mois_parent:
          type: array
          items:
            type: string
        fiches_remuneration_parent:
          type: array
          items:
            type: string
        attestation_cpas_parent:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_6:
          type: string
        decision_bourse_cfwb:
          type: array
          items:
            type: string
        attestation_boursier:
          type: array
          items:
            type: string
        titre_identite_sejour_longue_duree_ue:
          type: array
          items:
            type: string
        titre_sejour_belgique:
          type: array
          items:
            type: string
        affiliation_sport:
          type: string
        etudiant_solidaire:
          type: boolean
          nullable: true
        type_numero_compte:
          type: string
        numero_compte_iban:
          type: string
          maxLength: 34
        iban_valide:
          type: boolean
          nullable: true
        numero_compte_autre_format:
          type: string
          maxLength: 255
        code_bic_swift_banque:
          type: string
        prenom_titulaire_compte:
          type: string
          maxLength: 128
        nom_titulaire_compte:
          type: string
          maxLength: 128
      required:
      - acte_tutelle
      - annexe_25_26_refugies_apatrides
      - annexe_25_26_refugies_apatrides_decision_protection_parent
      - attestation_absence_dette_etablissement
      - attestation_boursier
      - attestation_cohabitation_legale
      - attestation_cpas
      - attestation_cpas_parent
      - attestation_enfant_personnel
      - attestation_immatriculation
      - carte_a
      - carte_a_b
      - carte_a_b_refugie
      - carte_cire_sejour_illimite_etranger
      - carte_identite_parent
      - carte_resident_longue_duree
      - carte_sejour_membre_ue
      - carte_sejour_permanent_membre_ue
      - composition_menage_acte_mariage
      - composition_menage_acte_naissance
      - decision_bourse_cfwb
      - decision_protection_subsidiaire
      - decision_protection_temporaire
      - fiches_remuneration
      - fiches_remuneration_parent
      - preuve_allocations_chomage_pension_indemnite
      - preuve_statut_apatride
      - titre_identite_sejour_longue_duree_ue
      - titre_sejour_3_mois_parent
      - titre_sejour_3_mois_professionel
      - titre_sejour_3_mois_remplacement
      - titre_sejour_belgique
      - titre_sejour_longue_duree_parent
      - uuid_proposition
    CompleterEmplacementsDocumentsParCandidatCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        reponses_documents_a_completer: {}
      required:
      - reponses_documents_a_completer
    CompleterPropositionCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        justification:
          type: string
        type_financement:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          type: string
        autre_bourse_recherche:
          type: string
        bourse_date_debut:
          type: string
          format: date
          nullable: true
        bourse_date_fin:
          type: string
          format: date
          nullable: true
        bourse_preuve:
          type: array
          items:
            type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        est_lie_fnrs_fria_fresh_csc:
          type: boolean
          nullable: true
        commentaire_financement:
          type: string
        titre_projet:
          type: string
        resume_projet:
          type: string
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        langue_redaction_these:
          type: string
          nullable: true
        institut_these:
          type: string
          nullable: true
        lieu_these:
          type: string
        projet_doctoral_deja_commence:
          type: boolean
          nullable: true
        projet_doctoral_institution:
          type: string
        projet_doctoral_date_debut:
          type: string
          format: date
          nullable: true
        doctorat_deja_realise:
          allOf:
          - $ref: '#/components/schemas/DoctoratDejaRealiseEnum'
          default: 'NO'
        institution:
          type: string
        domaine_these:
          type: string
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
      required:
      - bourse_preuve
      - documents_projet
      - graphe_gantt
      - lettres_recommandation
      - projet_formation_complementaire
      - proposition_programme_doctoral
      - uuid
    ContinuingEducationCompleterCurriculumCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        curriculum:
          type: array
          items:
            type: string
        equivalence_diplome:
          type: array
          items:
            type: string
        reponses_questions_specifiques: {}
      required:
      - curriculum
      - equivalence_diplome
      - uuid_proposition
    ContinuingEducationPropositionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        formation:
          $ref: '#/components/schemas/FormationContinueDTO'
        annee_calculee:
          type: integer
          nullable: true
        pot_calcule:
          type: string
        date_fin_pot:
          type: string
          format: date
          nullable: true
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        creee_le:
          type: string
          format: date-time
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            retrieve_specific_question:
              $ref: '#/components/schemas/ActionLink'
            update_specific_question:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        erreurs: {}
        reponses_questions_specifiques: {}
        curriculum:
          type: array
          items:
            type: string
        equivalence_diplome:
          type: array
          items:
            type: string
        inscription_a_titre:
          type: string
        nom_siege_social:
          type: string
          maxLength: 255
        numero_unique_entreprise:
          type: string
          maxLength: 255
        numero_tva_entreprise:
          type: string
          maxLength: 255
        adresse_mail_professionnelle:
          type: string
        type_adresse_facturation:
          type: string
        adresse_facturation:
          allOf:
          - $ref: '#/components/schemas/AdressePersonnelleDTONested'
          nullable: true
        pays_nationalite_candidat:
          type: string
        pays_nationalite_ue_candidat:
          type: boolean
          nullable: true
        copie_titre_sejour:
          type: array
          items:
            type: string
        pdf_recapitulatif:
          type: array
          items:
            type: string
        documents_additionnels:
          type: array
          items:
            type: string
        motivations:
          type: string
        moyens_decouverte_formation:
          type: array
          items:
            type: string
        autre_moyen_decouverte_formation:
          type: string
        adresses_emails_gestionnaires_formation:
          type: array
          items:
            type: string
        aide_a_la_formation:
          type: boolean
          nullable: true
        inscription_au_role_obligatoire:
          type: boolean
          nullable: true
        etat_formation:
          type: string
        marque_d_interet:
          type: boolean
          nullable: true
      required:
      - adresses_emails_gestionnaires_formation
      - autre_moyen_decouverte_formation
      - copie_titre_sejour
      - creee_le
      - curriculum
      - documents_additionnels
      - equivalence_diplome
      - erreurs
      - etat_formation
      - formation
      - matricule_candidat
      - motivations
      - moyens_decouverte_formation
      - nom_candidat
      - pays_nationalite_candidat
      - pdf_recapitulatif
      - prenom_candidat
      - reference
      - uuid
    ContinuingEducationPropositionSearchDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        formation:
          $ref: '#/components/schemas/FormationContinueDTO'
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        creee_le:
          type: string
          format: date-time
        soumise_le:
          type: string
          format: date-time
          nullable: true
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_specific_question:
              $ref: '#/components/schemas/ActionLink'
            update_specific_question:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        pdf_recapitulatif:
          type: array
          items:
            type: string
      required:
      - creee_le
      - formation
      - matricule_candidat
      - nom_candidat
      - pdf_recapitulatif
      - prenom_candidat
      - reference
      - uuid
    Coordonnees:
      type: object
      properties:
        contact:
          allOf:
          - $ref: '#/components/schemas/PersonAddress'
          nullable: true
        residential:
          allOf:
          - $ref: '#/components/schemas/PersonAddress'
          nullable: true
        private_email:
          type: string
          format: email
        phone_mobile:
          type: string
          maxLength: 30
        emergency_contact_phone:
          type: string
          maxLength: 30
      required:
      - contact
      - emergency_contact_phone
      - phone_mobile
      - private_email
      - residential
    CotutelleDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        cotutelle:
          type: boolean
          nullable: true
        motivation:
          type: string
          maxLength: 255
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
          maxLength: 255
        autre_institution:
          type: boolean
          nullable: true
        autre_institution_nom:
          type: string
        autre_institution_adresse:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - autres_documents
      - convention
      - demande_ouverture
    CurriculumDetails:
      type: object
      properties:
        professional_experiences:
          type: array
          items:
            $ref: '#/components/schemas/LiteProfessionalExperience'
        educational_experiences:
          type: array
          items:
            $ref: '#/components/schemas/LiteEducationalExperience'
        minimal_date:
          type: string
          format: date
          readOnly: true
        maximal_date:
          type: string
          format: date
          readOnly: true
        incomplete_periods:
          type: array
          items:
            type: string
        incomplete_experiences:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        incomplete_professional_experiences:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - educational_experiences
      - incomplete_experiences
      - incomplete_periods
      - incomplete_professional_experiences
      - professional_experiences
    Dashboard:
      type: object
      properties:
        links:
          type: object
          properties:
            list_propositions:
              $ref: '#/components/schemas/ActionLink'
            list_supervised:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
    DefinirCotutelleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        motivation:
          type: string
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
        autre_institution_nom:
          type: string
        autre_institution_adresse:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - autres_documents
      - convention
      - demande_ouverture
    DerniersEtablissementsSuperieursFrequentes:
      type: object
      properties:
        academic_year:
          type: integer
        names:
          type: array
          items:
            type: string
      required:
      - academic_year
      - names
    DesignerPromoteurReferenceCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        uuid_promoteur:
          type: string
      required:
      - uuid_promoteur
      - uuid_proposition
    DetailSignatureMembreCADTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        membre_CA:
          $ref: '#/components/schemas/MembreCADTONested'
        statut:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        commentaire_externe:
          type: string
        commentaire_interne:
          type: string
        motif_refus:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - membre_CA
      - pdf
      - statut
    DetailSignaturePromoteurDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        promoteur:
          $ref: '#/components/schemas/PromoteurDTONested'
        statut:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        commentaire_externe:
          type: string
        commentaire_interne:
          type: string
        motif_refus:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - pdf
      - promoteur
      - statut
    DiplomaticPost:
      type: object
      properties:
        code:
          type: integer
          maximum: 32767
          minimum: 0
          title: Code poste diplomatique
        name_fr:
          type: string
          title: Nom en français
          maxLength: 255
        name_en:
          type: string
          title: Nom en anglais
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        countries_iso_codes:
          type: array
          items:
            type: string
      required:
      - code
      - countries_iso_codes
      - email
      - name_en
      - name_fr
    DoctoratCompleterCurriculumCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        curriculum:
          type: array
          items:
            type: string
        reponses_questions_specifiques: {}
      required:
      - curriculum
      - uuid_proposition
    DoctoratDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        code:
          type: string
        annee:
          type: integer
        intitule:
          type: string
        sigle_entite_gestion:
          type: string
        intitule_entite_gestion:
          type: string
        campus:
          type: string
          default: ''
        type:
          type: string
        campus_inscription:
          type: string
          default: ''
        campus_uuid:
          type: string
          default: ''
      required:
      - annee
      - code
      - intitule
      - intitule_entite_gestion
      - sigle
      - sigle_entite_gestion
      - type
    DoctoratDejaRealiseEnum:
      enum:
      - 'YES'
      - 'NO'
      type: string
      description: |-
        * `YES` - Oui
        * `NO` - Non
    DoctoratSearchDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        code:
          type: string
        annee:
          type: integer
        intitule:
          type: string
        sigle_entite_gestion:
          type: string
        campus:
          $ref: '#/components/schemas/CampusDTO'
      required:
      - annee
      - campus
      - code
      - intitule
      - sigle
      - sigle_entite_gestion
    DoctorateDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        intitule_formation:
          type: string
        type_admission:
          type: string
        titre_these:
          type: string
        type_financement:
          type: string
        bourse_recherche:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        autre_bourse_recherche:
          type: string
        admission_acceptee_le:
          type: string
          format: date-time
          nullable: true
        matricule_doctorant:
          type: string
        noma_doctorant:
          type: string
        genre_doctorant:
          type: string
        prenom_doctorant:
          type: string
        nom_doctorant:
          type: string
        links:
          type: object
          properties:
            retrieve_project:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - annee_formation
      - genre_doctorant
      - intitule_formation
      - matricule_doctorant
      - nom_doctorant
      - noma_doctorant
      - prenom_doctorant
      - reference
      - sigle_formation
      - titre_these
      - type_admission
      - type_financement
      - uuid
    DoctorateEducationAccountingDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        attestation_absence_dette_etablissement:
          type: array
          items:
            type: string
        type_situation_assimilation:
          type: string
        sous_type_situation_assimilation_1:
          type: string
        carte_resident_longue_duree:
          type: array
          items:
            type: string
        carte_cire_sejour_illimite_etranger:
          type: array
          items:
            type: string
        carte_sejour_membre_ue:
          type: array
          items:
            type: string
        carte_sejour_permanent_membre_ue:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_2:
          type: string
        carte_a_b_refugie:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides:
          type: array
          items:
            type: string
        attestation_immatriculation:
          type: array
          items:
            type: string
        preuve_statut_apatride:
          type: array
          items:
            type: string
        carte_a_b:
          type: array
          items:
            type: string
        decision_protection_subsidiaire:
          type: array
          items:
            type: string
        decision_protection_temporaire:
          type: array
          items:
            type: string
        carte_a:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_3:
          type: string
        titre_sejour_3_mois_professionel:
          type: array
          items:
            type: string
        fiches_remuneration:
          type: array
          items:
            type: string
        titre_sejour_3_mois_remplacement:
          type: array
          items:
            type: string
        preuve_allocations_chomage_pension_indemnite:
          type: array
          items:
            type: string
        attestation_cpas:
          type: array
          items:
            type: string
        relation_parente:
          type: string
        sous_type_situation_assimilation_5:
          type: string
        composition_menage_acte_naissance:
          type: array
          items:
            type: string
        acte_tutelle:
          type: array
          items:
            type: string
        composition_menage_acte_mariage:
          type: array
          items:
            type: string
        attestation_cohabitation_legale:
          type: array
          items:
            type: string
        carte_identite_parent:
          type: array
          items:
            type: string
        titre_sejour_longue_duree_parent:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides_decision_protection_parent:
          type: array
          items:
            type: string
        titre_sejour_3_mois_parent:
          type: array
          items:
            type: string
        fiches_remuneration_parent:
          type: array
          items:
            type: string
        attestation_cpas_parent:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_6:
          type: string
        decision_bourse_cfwb:
          type: array
          items:
            type: string
        attestation_boursier:
          type: array
          items:
            type: string
        titre_identite_sejour_longue_duree_ue:
          type: array
          items:
            type: string
        titre_sejour_belgique:
          type: array
          items:
            type: string
        etudiant_solidaire:
          type: boolean
          nullable: true
        type_numero_compte:
          type: string
        numero_compte_iban:
          type: string
          maxLength: 34
        iban_valide:
          type: boolean
          nullable: true
        numero_compte_autre_format:
          type: string
          maxLength: 255
        code_bic_swift_banque:
          type: string
        prenom_titulaire_compte:
          type: string
          maxLength: 128
        nom_titulaire_compte:
          type: string
          maxLength: 128
        derniers_etablissements_superieurs_communaute_fr_frequentes:
          allOf:
          - $ref: '#/components/schemas/DerniersEtablissementsSuperieursFrequentes'
          readOnly: true
          nullable: true
        a_nationalite_ue:
          type: boolean
          readOnly: true
          nullable: true
      required:
      - acte_tutelle
      - annexe_25_26_refugies_apatrides
      - annexe_25_26_refugies_apatrides_decision_protection_parent
      - attestation_absence_dette_etablissement
      - attestation_boursier
      - attestation_cohabitation_legale
      - attestation_cpas
      - attestation_cpas_parent
      - attestation_immatriculation
      - carte_a
      - carte_a_b
      - carte_a_b_refugie
      - carte_cire_sejour_illimite_etranger
      - carte_identite_parent
      - carte_resident_longue_duree
      - carte_sejour_membre_ue
      - carte_sejour_permanent_membre_ue
      - code_bic_swift_banque
      - composition_menage_acte_mariage
      - composition_menage_acte_naissance
      - decision_bourse_cfwb
      - decision_protection_subsidiaire
      - decision_protection_temporaire
      - fiches_remuneration
      - fiches_remuneration_parent
      - nom_titulaire_compte
      - numero_compte_autre_format
      - numero_compte_iban
      - prenom_titulaire_compte
      - preuve_allocations_chomage_pension_indemnite
      - preuve_statut_apatride
      - relation_parente
      - sous_type_situation_assimilation_1
      - sous_type_situation_assimilation_2
      - sous_type_situation_assimilation_3
      - sous_type_situation_assimilation_5
      - sous_type_situation_assimilation_6
      - titre_identite_sejour_longue_duree_ue
      - titre_sejour_3_mois_parent
      - titre_sejour_3_mois_professionel
      - titre_sejour_3_mois_remplacement
      - titre_sejour_belgique
      - titre_sejour_longue_duree_parent
      - type_numero_compte
      - type_situation_assimilation
    DoctoratePreAdmissionSearchDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        doctorat:
          $ref: '#/components/schemas/DoctoratSearchDTO'
        code_secteur_formation:
          type: string
        intitule_secteur_formation:
          type: string
      required:
      - code_secteur_formation
      - doctorat
      - intitule_secteur_formation
      - reference
      - uuid
    DoctoratePropositionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        pre_admission_associee:
          type: string
        type_admission:
          type: string
        reference:
          type: string
        justification:
          type: string
        doctorat:
          $ref: '#/components/schemas/DoctoratDTO'
        annee_calculee:
          type: integer
          nullable: true
        pot_calcule:
          type: string
        date_fin_pot:
          type: string
          format: date
          nullable: true
        matricule_candidat:
          type: string
        code_secteur_formation:
          type: string
        intitule_secteur_formation:
          type: string
        commission_proximite:
          type: string
        type_financement:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        autre_bourse_recherche:
          type: string
          maxLength: 255
        bourse_date_debut:
          type: string
          format: date
          nullable: true
        bourse_date_fin:
          type: string
          format: date
          nullable: true
        bourse_preuve:
          type: array
          items:
            type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        est_lie_fnrs_fria_fresh_csc:
          type: boolean
          nullable: true
        commentaire_financement:
          type: string
        titre_projet:
          type: string
          maxLength: 255
        resume_projet:
          type: string
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        langue_redaction_these:
          type: string
        institut_these:
          type: string
          format: uuid
          nullable: true
        nom_institut_these:
          type: string
        sigle_institut_these:
          type: string
        lieu_these:
          type: string
          maxLength: 255
        projet_doctoral_deja_commence:
          type: boolean
          nullable: true
        projet_doctoral_institution:
          type: string
        projet_doctoral_date_debut:
          type: string
          format: date
          nullable: true
        doctorat_deja_realise:
          type: string
        institution:
          type: string
          maxLength: 255
        domaine_these:
          type: string
          maxLength: 255
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
          maxLength: 255
        fiche_archive_signatures_envoyees:
          type: array
          items:
            type: string
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_languages:
              $ref: '#/components/schemas/ActionLink'
            update_languages:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_project:
              $ref: '#/components/schemas/ActionLink'
            update_project:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            update_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            add_approval:
              $ref: '#/components/schemas/ActionLink'
            add_member:
              $ref: '#/components/schemas/ActionLink'
            edit_external_member:
              $ref: '#/components/schemas/ActionLink'
            remove_member:
              $ref: '#/components/schemas/ActionLink'
            set_reference_promoter:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
            request_signatures:
              $ref: '#/components/schemas/ActionLink'
            approve_by_pdf:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_accounting:
              $ref: '#/components/schemas/ActionLink'
            update_accounting:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        erreurs: {}
        reponses_questions_specifiques: {}
        curriculum:
          type: array
          items:
            type: string
        pdf_recapitulatif:
          type: array
          items:
            type: string
      required:
      - bourse_preuve
      - code_secteur_formation
      - curriculum
      - doctorat
      - doctorat_deja_realise
      - documents_projet
      - domaine_these
      - erreurs
      - fiche_archive_signatures_envoyees
      - graphe_gantt
      - intitule_secteur_formation
      - lettres_recommandation
      - lieu_these
      - matricule_candidat
      - nom_institut_these
      - pdf_recapitulatif
      - projet_formation_complementaire
      - proposition_programme_doctoral
      - reference
      - sigle_institut_these
      - type_admission
      - uuid
    DoctoratePropositionSearchDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        pre_admission_associee:
          type: string
        reference:
          type: string
        type_admission:
          type: string
        doctorat:
          $ref: '#/components/schemas/DoctoratDTO'
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        code_secteur_formation:
          type: string
        intitule_secteur_formation:
          type: string
        commission_proximite:
          type: string
        creee_le:
          type: string
          format: date-time
        soumise_le:
          type: string
          format: date-time
          nullable: true
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_languages:
              $ref: '#/components/schemas/ActionLink'
            update_languages:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_project:
              $ref: '#/components/schemas/ActionLink'
            update_project:
              $ref: '#/components/schemas/ActionLink'
            retrieve_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            update_cotutelle:
              $ref: '#/components/schemas/ActionLink'
            retrieve_supervision:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_accounting:
              $ref: '#/components/schemas/ActionLink'
            update_accounting:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        pdf_recapitulatif:
          type: array
          items:
            type: string
      required:
      - code_secteur_formation
      - creee_le
      - doctorat
      - intitule_secteur_formation
      - matricule_candidat
      - nom_candidat
      - pdf_recapitulatif
      - prenom_candidat
      - reference
      - type_admission
      - uuid
    DocumentSpecificQuestion:
      type: object
      properties:
        uuid:
          type: string
        type:
          type: string
        title: {}
        text: {}
        help_text: {}
        configuration: {}
        values:
          type: array
          items: {}
        tab:
          type: string
        tab_name:
          type: string
        required:
          type: boolean
      required:
      - configuration
      - help_text
      - required
      - tab
      - tab_name
      - text
      - title
      - type
      - uuid
      - values
    DocumentSpecificQuestionsList:
      type: object
      properties:
        immediate_requested_documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpecificQuestion'
        later_requested_documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpecificQuestion'
        deadline:
          type: string
          format: date
          nullable: true
      required:
      - deadline
      - immediate_requested_documents
      - later_requested_documents
    EducationalExperience:
      type: object
      properties:
        educationalexperienceyear_set:
          type: array
          items:
            $ref: '#/components/schemas/EducationalExperienceYear'
        country:
          type: string
          nullable: true
        linguistic_regime:
          type: string
          nullable: true
        program:
          type: string
          nullable: true
        valuated_from_trainings:
          type: array
          items:
            type: string
          readOnly: true
        institute:
          type: string
          nullable: true
        external_id:
          type: string
          readOnly: true
          nullable: true
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          title: Nom de l'établissement
          maxLength: 255
        institute_address:
          type: string
          title: Adresse de l'établissement
          maxLength: 255
        education_name:
          type: string
          title: Intitulé de la formation
          maxLength: 255
        study_system:
          title: Système d'études
          oneOf:
          - $ref: '#/components/schemas/StudySystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evaluation_type:
          title: Système d'évaluation
          oneOf:
          - $ref: '#/components/schemas/EvaluationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        transcript_type:
          title: Type de relevé de notes
          oneOf:
          - $ref: '#/components/schemas/TranscriptTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        obtained_diploma:
          type: boolean
          title: Avez-vous obtenu un diplôme au terme de cette formation ?
        obtained_grade:
          title: Grade obtenu
          oneOf:
          - $ref: '#/components/schemas/ObtainedGradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        graduate_degree:
          type: array
          items:
            type: string
          title: Diplôme
        graduate_degree_translation:
          type: array
          items:
            type: string
          title: Traduction du diplôme
        transcript:
          type: array
          items:
            type: string
          title: Relevé de notes pour l'ensemble des années
        transcript_translation:
          type: array
          items:
            type: string
          title: Traduction du relevé de notes pour l'ensemble des années
        rank_in_diploma:
          type: string
          title: Rang dans le diplôme
          maxLength: 30
        expected_graduation_date:
          type: string
          format: date
          nullable: true
          title: Date prévue de délivrance du diplôme
        dissertation_title:
          type: string
          title: Titre du mémoire
          maxLength: 255
        dissertation_score:
          type: string
          title: Note du mémoire
          maxLength: 30
        dissertation_summary:
          type: array
          items:
            type: string
          title: Résumé du mémoire
      required:
      - country
      - educationalexperienceyear_set
      - obtained_diploma
    EducationalExperienceYear:
      type: object
      properties:
        academic_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        uuid:
          type: string
          readOnly: true
        registered_credit_number:
          type: number
          format: double
          nullable: true
          title: Crédits inscrits
        acquired_credit_number:
          type: number
          format: double
          minimum: 0
          nullable: true
          title: Crédits acquis
        result:
          title: Résultat
          oneOf:
          - $ref: '#/components/schemas/ResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        transcript:
          type: array
          items:
            type: string
          title: Relevé de notes de l'année
          maxItems: 1
        transcript_translation:
          type: array
          items:
            type: string
          title: Traduction du relevé de notes de l'année
          maxItems: 1
      required:
      - academic_year
    EducationalTypeEnum:
      enum:
      - TEACHING_OF_GENERAL_EDUCATION
      - TRANSITION_METHOD
      - ARTISTIC_TRANSITION
      - QUALIFICATION_METHOD
      - ARTISTIC_QUALIFICATION
      - PROFESSIONAL_EDUCATION
      type: string
      description: |-
        * `TEACHING_OF_GENERAL_EDUCATION` - Enseignement de formation générale
        * `TRANSITION_METHOD` - Technique de transition
        * `ARTISTIC_TRANSITION` - Artistique de transition
        * `QUALIFICATION_METHOD` - Technique de qualification
        * `ARTISTIC_QUALIFICATION` - Artistique de qualification
        * `PROFESSIONAL_EDUCATION` - Enseignement professionnel
    ElementConfirmation:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        nom:
          type: string
        texte:
          type: string
        reponses:
          type: array
          items: {}
          nullable: true
        titre:
          type: string
        type:
          type: string
      required:
      - nom
      - texte
      - titre
      - type
    EquivalenceEnum:
      enum:
      - 'YES'
      - PENDING
      - 'NO'
      type: string
      description: |-
        * `YES` - Oui
        * `PENDING` - En cours de demande
        * `NO` - Non
    EvaluationTypeEnum:
      enum:
      - ECTS_CREDITS
      - NON_EUROPEAN_CREDITS
      - NO_CREDIT_SYSTEM
      type: string
      description: "* `ECTS_CREDITS` - Crédits ECTS\n* `NON_EUROPEAN_CREDITS` - Crédits\
        \ non-européens\n* `NO_CREDIT_SYSTEM` - Pas de système de crédits "
    Exam:
      type: object
      properties:
        required:
          type: boolean
          readOnly: true
        title_fr:
          type: string
          readOnly: true
        title_en:
          type: string
          readOnly: true
        help_text_fr:
          type: string
          readOnly: true
        help_text_en:
          type: string
          readOnly: true
        certificate:
          type: array
          items:
            type: string
          title: Attestation de réussite de l'examen d'admission aux études de premier
            cycle de l'enseignement supérieur
          maxItems: 1
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        is_valuated:
          type: boolean
          readOnly: true
    ExternalDoctoratePropositionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        type_admission:
          type: string
        reference:
          type: string
        doctorat:
          $ref: '#/components/schemas/DoctoratDTO'
        matricule_candidat:
          type: string
        code_secteur_formation:
          type: string
        commission_proximite:
          type: string
        institut_these:
          type: string
          format: uuid
          nullable: true
        institution:
          type: string
        domaine_these:
          type: string
        fiche_archive_signatures_envoyees:
          type: array
          items:
            type: string
        statut:
          type: string
          readOnly: true
      required:
      - code_secteur_formation
      - doctorat
      - domaine_these
      - fiche_archive_signatures_envoyees
      - matricule_candidat
      - reference
      - type_admission
      - uuid
    ExternalSupervisionDTO:
      type: object
      properties:
        proposition:
          $ref: '#/components/schemas/ExternalDoctoratePropositionDTO'
        supervision:
          $ref: '#/components/schemas/SupervisionDTO'
      required:
      - proposition
      - supervision
    ForeignDiplomaTypeEnum:
      enum:
      - NATIONAL_BACHELOR
      - EUROPEAN_BACHELOR
      - INTERNATIONAL_BACCALAUREATE
      type: string
      description: |-
        * `NATIONAL_BACHELOR` - Baccalauréat national (ou diplôme d'état, ...)
        * `EUROPEAN_BACHELOR` - Baccalauréat européen (Schola Europaea)
        * `INTERNATIONAL_BACCALAUREATE` - Baccalauréat international (IBO)
    ForeignHighSchoolDiploma:
      type: object
      properties:
        academic_graduation_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        high_school_transcript:
          type: array
          items:
            type: string
          title: Un relevé de notes pour votre dernière année d'études secondaires
          maxItems: 1
        high_school_diploma:
          type: array
          items:
            type: string
          title: Diplôme d'études secondaires
          maxItems: 1
        foreign_diploma_type:
          nullable: true
          title: Quel diplôme avez-vous obtenu (ou obtiendrez-vous) ?
          oneOf:
          - $ref: '#/components/schemas/ForeignDiplomaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        linguistic_regime:
          type: string
          nullable: true
        other_linguistic_regime:
          type: string
          title: Si autre régime linguistique, précisez
          maxLength: 25
        country:
          type: string
          nullable: true
        equivalence:
          title: Ce diplôme a-t-il fait l'objet d'une décision d'équivalence par les
            services de la Communauté française de Belgique ?
          oneOf:
          - $ref: '#/components/schemas/EquivalenceEnum'
          - $ref: '#/components/schemas/BlankEnum'
        high_school_transcript_translation:
          type: array
          items:
            type: string
          title: Une traduction de votre relevé de notes pour votre dernière année
            d'études secondaires par un traducteur juré
          maxItems: 1
        high_school_diploma_translation:
          type: array
          items:
            type: string
          title: Une traduction de votre diplôme d'études secondaires par un traducteur
            juré
          maxItems: 1
        final_equivalence_decision_ue:
          type: array
          items:
            type: string
          title: Copie recto-verso de la décision d'équivalence définitive (UE)
          maxItems: 2
        access_diploma_to_higher_education_ue:
          type: array
          items:
            type: string
          title: Diplôme d'Aptitude à accéder à l'Enseignement supérieur (DAES)
          maxItems: 1
        final_equivalence_decision_not_ue:
          type: array
          items:
            type: string
          title: Copie recto-verso de la décision d'équivalence définitive (non UE)
          maxItems: 2
        access_diploma_to_higher_education_not_ue:
          type: array
          items:
            type: string
          title: Diplôme d'Aptitude à accéder à l'Enseignement supérieur (DAES)
          maxItems: 1
        equivalence_decision_proof:
          type: array
          items:
            type: string
          title: Preuve de la demande d'équivalence
          maxItems: 1
      required:
      - academic_graduation_year
      - country
      - linguistic_regime
    FormationContinueDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        code:
          type: string
        annee:
          type: integer
        date_debut:
          type: string
          format: date
          nullable: true
        intitule:
          type: string
        intitule_fr:
          type: string
        intitule_en:
          type: string
        campus:
          type: string
          default: ''
        type:
          type: string
        code_domaine:
          type: string
        campus_inscription:
          type: string
          default: ''
        sigle_entite_gestion:
          type: string
        credits:
          type: integer
          nullable: true
        campus_uuid:
          type: string
          default: ''
      required:
      - annee
      - code
      - code_domaine
      - intitule
      - intitule_en
      - intitule_fr
      - sigle
      - sigle_entite_gestion
      - type
    FormationGeneraleDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        code:
          type: string
        annee:
          type: integer
        date_debut:
          type: string
          format: date
          nullable: true
        intitule:
          type: string
        intitule_fr:
          type: string
        intitule_en:
          type: string
        campus:
          type: string
          default: ''
        type:
          type: string
        code_domaine:
          type: string
        campus_inscription:
          type: string
          default: ''
        sigle_entite_gestion:
          type: string
        credits:
          type: integer
          nullable: true
        campus_uuid:
          type: string
          default: ''
      required:
      - annee
      - code
      - code_domaine
      - intitule
      - intitule_en
      - intitule_fr
      - sigle
      - sigle_entite_gestion
      - type
    GenderEnum:
      enum:
      - F
      - H
      - X
      type: string
      description: |-
        * `F` - Femme
        * `H` - Homme
        * `X` - Autre
    GeneralEducationAccountingDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        attestation_absence_dette_etablissement:
          type: array
          items:
            type: string
        demande_allocation_d_etudes_communaute_francaise_belgique:
          type: boolean
          nullable: true
        enfant_personnel:
          type: boolean
          nullable: true
        attestation_enfant_personnel:
          type: array
          items:
            type: string
        type_situation_assimilation:
          type: string
        sous_type_situation_assimilation_1:
          type: string
        carte_resident_longue_duree:
          type: array
          items:
            type: string
        carte_cire_sejour_illimite_etranger:
          type: array
          items:
            type: string
        carte_sejour_membre_ue:
          type: array
          items:
            type: string
        carte_sejour_permanent_membre_ue:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_2:
          type: string
        carte_a_b_refugie:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides:
          type: array
          items:
            type: string
        attestation_immatriculation:
          type: array
          items:
            type: string
        preuve_statut_apatride:
          type: array
          items:
            type: string
        carte_a_b:
          type: array
          items:
            type: string
        decision_protection_subsidiaire:
          type: array
          items:
            type: string
        decision_protection_temporaire:
          type: array
          items:
            type: string
        carte_a:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_3:
          type: string
        titre_sejour_3_mois_professionel:
          type: array
          items:
            type: string
        fiches_remuneration:
          type: array
          items:
            type: string
        titre_sejour_3_mois_remplacement:
          type: array
          items:
            type: string
        preuve_allocations_chomage_pension_indemnite:
          type: array
          items:
            type: string
        attestation_cpas:
          type: array
          items:
            type: string
        relation_parente:
          type: string
        sous_type_situation_assimilation_5:
          type: string
        composition_menage_acte_naissance:
          type: array
          items:
            type: string
        acte_tutelle:
          type: array
          items:
            type: string
        composition_menage_acte_mariage:
          type: array
          items:
            type: string
        attestation_cohabitation_legale:
          type: array
          items:
            type: string
        carte_identite_parent:
          type: array
          items:
            type: string
        titre_sejour_longue_duree_parent:
          type: array
          items:
            type: string
        annexe_25_26_refugies_apatrides_decision_protection_parent:
          type: array
          items:
            type: string
        titre_sejour_3_mois_parent:
          type: array
          items:
            type: string
        fiches_remuneration_parent:
          type: array
          items:
            type: string
        attestation_cpas_parent:
          type: array
          items:
            type: string
        sous_type_situation_assimilation_6:
          type: string
        decision_bourse_cfwb:
          type: array
          items:
            type: string
        attestation_boursier:
          type: array
          items:
            type: string
        titre_identite_sejour_longue_duree_ue:
          type: array
          items:
            type: string
        titre_sejour_belgique:
          type: array
          items:
            type: string
        affiliation_sport:
          type: string
        etudiant_solidaire:
          type: boolean
          nullable: true
        type_numero_compte:
          type: string
        numero_compte_iban:
          type: string
          maxLength: 34
        iban_valide:
          type: boolean
          nullable: true
        numero_compte_autre_format:
          type: string
          maxLength: 255
        code_bic_swift_banque:
          type: string
        prenom_titulaire_compte:
          type: string
          maxLength: 128
        nom_titulaire_compte:
          type: string
          maxLength: 128
        derniers_etablissements_superieurs_communaute_fr_frequentes:
          allOf:
          - $ref: '#/components/schemas/DerniersEtablissementsSuperieursFrequentes'
          readOnly: true
          nullable: true
        a_nationalite_ue:
          type: boolean
          readOnly: true
          nullable: true
      required:
      - acte_tutelle
      - annexe_25_26_refugies_apatrides
      - annexe_25_26_refugies_apatrides_decision_protection_parent
      - attestation_absence_dette_etablissement
      - attestation_boursier
      - attestation_cohabitation_legale
      - attestation_cpas
      - attestation_cpas_parent
      - attestation_enfant_personnel
      - attestation_immatriculation
      - carte_a
      - carte_a_b
      - carte_a_b_refugie
      - carte_cire_sejour_illimite_etranger
      - carte_identite_parent
      - carte_resident_longue_duree
      - carte_sejour_membre_ue
      - carte_sejour_permanent_membre_ue
      - composition_menage_acte_mariage
      - composition_menage_acte_naissance
      - decision_bourse_cfwb
      - decision_protection_subsidiaire
      - decision_protection_temporaire
      - fiches_remuneration
      - fiches_remuneration_parent
      - preuve_allocations_chomage_pension_indemnite
      - preuve_statut_apatride
      - titre_identite_sejour_longue_duree_ue
      - titre_sejour_3_mois_parent
      - titre_sejour_3_mois_professionel
      - titre_sejour_3_mois_remplacement
      - titre_sejour_belgique
      - titre_sejour_longue_duree_parent
    GeneralEducationCompleterCurriculumCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        curriculum:
          type: array
          items:
            type: string
        equivalence_diplome:
          type: array
          items:
            type: string
        reponses_questions_specifiques: {}
      required:
      - curriculum
      - equivalence_diplome
      - uuid_proposition
    GeneralEducationPropositionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        formation:
          $ref: '#/components/schemas/FormationGeneraleDTO'
        annee_calculee:
          type: integer
          nullable: true
        pot_calcule:
          type: string
        date_fin_pot:
          type: string
          format: date
          nullable: true
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        creee_le:
          type: string
          format: date-time
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_exam:
              $ref: '#/components/schemas/ActionLink'
            update_exam:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            retrieve_specific_question:
              $ref: '#/components/schemas/ActionLink'
            update_specific_question:
              $ref: '#/components/schemas/ActionLink'
            retrieve_accounting:
              $ref: '#/components/schemas/ActionLink'
            update_accounting:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
            view_payment:
              $ref: '#/components/schemas/ActionLink'
            pay_after_submission:
              $ref: '#/components/schemas/ActionLink'
            pay_after_request:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        erreurs: {}
        avec_bourse_double_diplome:
          type: boolean
          nullable: true
        bourse_double_diplome:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        avec_bourse_internationale:
          type: boolean
          nullable: true
        bourse_internationale:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        avec_bourse_erasmus_mundus:
          type: boolean
          nullable: true
        bourse_erasmus_mundus:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        reponses_questions_specifiques: {}
        curriculum:
          type: array
          items:
            type: string
        equivalence_diplome:
          type: array
          items:
            type: string
        pdf_recapitulatif:
          type: array
          items:
            type: string
        documents_additionnels:
          type: array
          items:
            type: string
        poste_diplomatique:
          allOf:
          - $ref: '#/components/schemas/PosteDiplomatiqueDTONested'
          nullable: true
      required:
      - creee_le
      - curriculum
      - documents_additionnels
      - equivalence_diplome
      - erreurs
      - formation
      - matricule_candidat
      - nom_candidat
      - pdf_recapitulatif
      - prenom_candidat
      - reference
      - uuid
    GeneralEducationPropositionIdentityWithStatus:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
    GeneralEducationPropositionSearchDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        formation:
          $ref: '#/components/schemas/FormationGeneraleDTO'
        reference:
          type: string
        matricule_candidat:
          type: string
        prenom_candidat:
          type: string
        nom_candidat:
          type: string
        creee_le:
          type: string
          format: date-time
        soumise_le:
          type: string
          format: date-time
          nullable: true
        statut:
          type: string
          readOnly: true
        links:
          type: object
          properties:
            retrieve_person:
              $ref: '#/components/schemas/ActionLink'
            update_person:
              $ref: '#/components/schemas/ActionLink'
            retrieve_coordinates:
              $ref: '#/components/schemas/ActionLink'
            update_coordinates:
              $ref: '#/components/schemas/ActionLink'
            retrieve_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            update_secondary_studies:
              $ref: '#/components/schemas/ActionLink'
            retrieve_curriculum:
              $ref: '#/components/schemas/ActionLink'
            update_curriculum:
              $ref: '#/components/schemas/ActionLink'
            retrieve_specific_question:
              $ref: '#/components/schemas/ActionLink'
            update_specific_question:
              $ref: '#/components/schemas/ActionLink'
            retrieve_training_choice:
              $ref: '#/components/schemas/ActionLink'
            update_training_choice:
              $ref: '#/components/schemas/ActionLink'
            retrieve_accounting:
              $ref: '#/components/schemas/ActionLink'
            update_accounting:
              $ref: '#/components/schemas/ActionLink'
            submit_proposition:
              $ref: '#/components/schemas/ActionLink'
            destroy_proposition:
              $ref: '#/components/schemas/ActionLink'
            retrieve_documents:
              $ref: '#/components/schemas/ActionLink'
            update_documents:
              $ref: '#/components/schemas/ActionLink'
            pay_after_submission:
              $ref: '#/components/schemas/ActionLink'
            pay_after_request:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        pdf_recapitulatif:
          type: array
          items:
            type: string
      required:
      - creee_le
      - formation
      - matricule_candidat
      - nom_candidat
      - pdf_recapitulatif
      - prenom_candidat
      - reference
      - uuid
    GraduatedFromHighSchoolEnum:
      enum:
      - 'YES'
      - THIS_YEAR
      - 'NO'
      type: string
      description: |-
        * `YES` - Oui
        * `THIS_YEAR` - Cette année
        * `NO` - Non
    HighSchoolDiploma:
      type: object
      properties:
        graduated_from_high_school:
          oneOf:
          - $ref: '#/components/schemas/GraduatedFromHighSchoolEnum'
          - $ref: '#/components/schemas/BlankEnum'
        graduated_from_high_school_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        belgian_diploma:
          allOf:
          - $ref: '#/components/schemas/BelgianHighSchoolDiploma'
          nullable: true
        foreign_diploma:
          allOf:
          - $ref: '#/components/schemas/ForeignHighSchoolDiploma'
          nullable: true
        high_school_diploma_alternative:
          allOf:
          - $ref: '#/components/schemas/HighSchoolDiplomaAlternative'
          nullable: true
        specific_question_answers:
          writeOnly: true
        is_vae_potential:
          type: boolean
          readOnly: true
        is_valuated:
          type: boolean
          readOnly: true
        can_update_diploma:
          type: boolean
          readOnly: true
    HighSchoolDiplomaAlternative:
      type: object
      properties:
        certificate:
          type: array
          items:
            type: string
          title: Attestation de réussite de l'examen d'admission aux études de premier
            cycle de l'enseignement supérieur
          maxItems: 1
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    IdentificationDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        matricule:
          type: string
        nom:
          type: string
        prenom:
          type: string
        autres_prenoms:
          type: string
        date_naissance:
          type: string
          format: date
          nullable: true
        annee_naissance:
          type: integer
          nullable: true
        pays_nationalite:
          type: string
        pays_nationalite_europeen:
          type: boolean
          nullable: true
        nom_pays_nationalite:
          type: string
        sexe:
          type: string
        genre:
          type: string
        photo_identite:
          type: array
          items:
            type: string
        pays_naissance:
          type: string
        nom_pays_naissance:
          type: string
        lieu_naissance:
          type: string
        etat_civil:
          type: string
        pays_residence:
          type: string
        carte_identite:
          type: array
          items:
            type: string
        passeport:
          type: array
          items:
            type: string
        numero_registre_national_belge:
          type: string
        numero_carte_identite:
          type: string
        numero_passeport:
          type: string
        date_expiration_carte_identite:
          type: string
          format: date
          nullable: true
        date_expiration_passeport:
          type: string
          format: date
          nullable: true
        langue_contact:
          type: string
        nom_langue_contact:
          type: string
        email:
          type: string
        annee_derniere_inscription_ucl:
          type: integer
          nullable: true
        noma_derniere_inscription_ucl:
          type: string
      required:
      - autres_prenoms
      - carte_identite
      - email
      - etat_civil
      - genre
      - langue_contact
      - lieu_naissance
      - matricule
      - nom
      - nom_langue_contact
      - nom_pays_naissance
      - nom_pays_nationalite
      - noma_derniere_inscription_ucl
      - numero_carte_identite
      - numero_passeport
      - numero_registre_national_belge
      - passeport
      - pays_naissance
      - pays_nationalite
      - pays_residence
      - photo_identite
      - prenom
      - sexe
    IdentifierSupervisionActor:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        matricule:
          type: string
        prenom:
          type: string
          maxLength: 50
        nom:
          type: string
          maxLength: 50
        email:
          type: string
          maxLength: 255
        est_docteur:
          type: boolean
          nullable: true
        institution:
          type: string
          maxLength: 255
        ville:
          type: string
          maxLength: 255
        pays:
          type: string
        langue:
          type: string
        actor_type:
          $ref: '#/components/schemas/ActorTypeEnum'
      required:
      - actor_type
    InformationsSpecifiquesFormationContinueDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle_formation:
          type: string
        annee:
          type: integer
        aide_a_la_formation:
          type: boolean
        inscription_au_role_obligatoire:
          type: boolean
        etat:
          type: string
          readOnly: true
        lien_informations_pratiques_formation:
          type: string
          format: uri
          readOnly: true
      required:
      - aide_a_la_formation
      - annee
      - inscription_au_role_obligatoire
      - sigle_formation
    InitierPropositionCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        type_admission:
          $ref: '#/components/schemas/TypeAdmissionEnum'
        matricule_candidat:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
          nullable: true
        pre_admission_associee:
          type: string
        justification:
          type: string
        commission_proximite:
          oneOf:
          - $ref: '#/components/schemas/CommissionProximiteEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - commission_proximite
      - matricule_candidat
      - type_admission
    InitierPropositionContinueCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        matricule_candidat:
          type: string
        motivations:
          type: string
        moyens_decouverte_formation:
          type: array
          items:
            type: string
        autre_moyen_decouverte_formation:
          type: string
        marque_d_interet:
          type: boolean
          nullable: true
      required:
      - annee_formation
      - matricule_candidat
      - motivations
      - moyens_decouverte_formation
      - sigle_formation
    InitierPropositionGeneraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        matricule_candidat:
          type: string
        avec_bourse_double_diplome:
          type: boolean
          nullable: true
        bourse_double_diplome:
          type: string
        avec_bourse_internationale:
          type: boolean
          nullable: true
        bourse_internationale:
          type: string
        avec_bourse_erasmus_mundus:
          type: boolean
          nullable: true
        bourse_erasmus_mundus:
          type: string
      required:
      - annee_formation
      - matricule_candidat
      - sigle_formation
    LanguageEnum:
      enum:
      - fr-be
      - en
      type: string
      description: |-
        * `fr-be` - Français
        * `en` - Anglais
    LanguageKnowledge:
      type: object
      properties:
        language:
          type: string
          nullable: true
        listening_comprehension:
          nullable: true
          title: Veuillez évaluer votre compréhension à l'audition
          oneOf:
          - $ref: '#/components/schemas/WritingAbilityEnum'
          - $ref: '#/components/schemas/NullEnum'
        speaking_ability:
          nullable: true
          title: Évaluez votre capacité orale
          oneOf:
          - $ref: '#/components/schemas/WritingAbilityEnum'
          - $ref: '#/components/schemas/NullEnum'
        writing_ability:
          nullable: true
          title: Évaluez votre capacité d'écriture
          oneOf:
          - $ref: '#/components/schemas/WritingAbilityEnum'
          - $ref: '#/components/schemas/NullEnum'
        certificate:
          type: array
          items:
            type: string
          nullable: true
          title: Certificat de connaissance des langues
          maxItems: 1
      required:
      - language
    LiteEducationalExperience:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          title: Nom de l'établissement
          maxLength: 255
        institute:
          type: string
          nullable: true
        program:
          type: string
          nullable: true
        education_name:
          type: string
          title: Intitulé de la formation
          maxLength: 255
        educationalexperienceyear_set:
          type: array
          items:
            $ref: '#/components/schemas/LiteEducationalExperienceYear'
        valuated_from_trainings:
          type: array
          items:
            type: string
          readOnly: true
        country:
          type: string
          nullable: true
        obtained_diploma:
          type: boolean
          title: Avez-vous obtenu un diplôme au terme de cette formation ?
        external_id:
          type: string
          readOnly: true
          nullable: true
      required:
      - country
      - educationalexperienceyear_set
      - obtained_diploma
    LiteEducationalExperienceYear:
      type: object
      properties:
        academic_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        result:
          title: Résultat
          oneOf:
          - $ref: '#/components/schemas/ResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - academic_year
    LiteProfessionalExperience:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          title: Nom de l'établissement
          maxLength: 255
        start_date:
          type: string
          format: date
          title: Début
        end_date:
          type: string
          format: date
          title: Fin
        type:
          $ref: '#/components/schemas/TypeEnum'
        certificate:
          type: array
          items:
            type: string
          title: Attestation
        valuated_from_trainings:
          type: array
          items:
            type: string
          readOnly: true
        external_id:
          type: string
          readOnly: true
          nullable: true
      required:
      - end_date
      - start_date
      - type
    MembreCADTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        matricule:
          type: string
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        est_docteur:
          type: boolean
        institution:
          type: string
        ville:
          type: string
        code_pays:
          type: string
        pays:
          type: string
        est_externe:
          type: boolean
      required:
      - code_pays
      - email
      - est_docteur
      - est_externe
      - institution
      - nom
      - pays
      - prenom
      - uuid
      - ville
    MethodEnum:
      enum:
      - BANCONTACT
      - CREDIT_CARD
      - BANK_TRANSFER
      type: string
      description: |-
        * `BANCONTACT` - bancontact
        * `CREDIT_CARD` - creditcard
        * `BANK_TRANSFER` - banktransfer
    ModifierChoixFormationContinueCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        motivations:
          type: string
        moyens_decouverte_formation:
          type: array
          items:
            type: string
        autre_moyen_decouverte_formation:
          type: string
        marque_d_interet:
          type: boolean
          nullable: true
        reponses_questions_specifiques: {}
      required:
      - annee_formation
      - motivations
      - moyens_decouverte_formation
      - sigle_formation
      - uuid_proposition
    ModifierChoixFormationGeneraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        avec_bourse_double_diplome:
          type: boolean
          nullable: true
        bourse_double_diplome:
          type: string
        avec_bourse_internationale:
          type: boolean
          nullable: true
        bourse_internationale:
          type: string
        avec_bourse_erasmus_mundus:
          type: boolean
          nullable: true
        bourse_erasmus_mundus:
          type: string
        reponses_questions_specifiques: {}
      required:
      - annee_formation
      - sigle_formation
      - uuid_proposition
    ModifierQuestionsSpecifiquesFormationContinueCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        inscription_a_titre:
          type: string
        nom_siege_social:
          type: string
        numero_unique_entreprise:
          type: string
        numero_tva_entreprise:
          type: string
        adresse_mail_professionnelle:
          type: string
        type_adresse_facturation:
          type: string
        adresse_facturation_rue:
          type: string
        adresse_facturation_numero_rue:
          type: string
        adresse_facturation_code_postal:
          type: string
        adresse_facturation_ville:
          type: string
        adresse_facturation_pays:
          type: string
        adresse_facturation_destinataire:
          type: string
        adresse_facturation_boite_postale:
          type: string
        reponses_questions_specifiques: {}
        copie_titre_sejour:
          type: array
          items:
            type: string
        documents_additionnels:
          type: array
          items:
            type: string
      required:
      - copie_titre_sejour
      - documents_additionnels
    ModifierQuestionsSpecifiquesFormationGeneraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        reponses_questions_specifiques: {}
        documents_additionnels:
          type: array
          items:
            type: string
        poste_diplomatique:
          type: integer
          nullable: true
      required:
      - documents_additionnels
    ModifierTypeAdmissionDoctoraleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        type_admission:
          type: string
        sigle_formation:
          type: string
        annee_formation:
          type: integer
        commission_proximite:
          type: string
        justification:
          type: string
        reponses_questions_specifiques: {}
      required:
      - annee_formation
      - sigle_formation
      - type_admission
      - uuid_proposition
    NullEnum:
      enum:
      - null
    ObtainedGradeEnum:
      enum:
      - GREATER_DISTINCTION
      - GREAT_DISTINCTION
      - DISTINCTION
      - SATISFACTION
      - SUCCESS_WITHOUT_DISTINCTION
      type: string
      description: |-
        * `GREATER_DISTINCTION` - La plus grande distinction (90-100%)
        * `GREAT_DISTINCTION` - Grande distinction (80-89%)
        * `DISTINCTION` - Distinction (70-79%)
        * `SATISFACTION` - Satisfaction (60-69%)
        * `SUCCESS_WITHOUT_DISTINCTION` - Réussite sans mention (50-59%)
    PDFRecap:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    PaginatedDiplomaticPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiplomaticPost'
    PaginatedPersonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedTutorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tutor'
    PaiementDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        identifiant_paiement:
          type: string
        statut:
          type: string
        methode:
          type: string
        montant:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        url_checkout:
          type: string
        date_creation:
          type: string
          format: date-time
        date_mise_a_jour:
          type: string
          format: date-time
        date_expiration:
          type: string
          format: date-time
          nullable: true
      required:
      - date_creation
      - date_mise_a_jour
      - identifiant_paiement
      - methode
      - montant
      - statut
      - url_checkout
    PatchedModifierMembreSupervisionExterne:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_proposition:
          type: string
        uuid_membre:
          type: string
        prenom:
          type: string
        nom:
          type: string
        email:
          type: string
        est_docteur:
          type: boolean
          nullable: true
        institution:
          type: string
        ville:
          type: string
        pays:
          type: string
        langue:
          type: string
    PatchedPropositionIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
    PaymentMethod:
      type: object
      properties:
        method:
          oneOf:
          - $ref: '#/components/schemas/MethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
    Period:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        date_debut:
          type: string
          format: date
          nullable: true
        date_fin:
          type: string
          format: date
          nullable: true
    Person:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        global_id:
          type: string
          nullable: true
          maxLength: 10
    PersonAddress:
      type: object
      properties:
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        city:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          nullable: true
        street:
          type: string
          maxLength: 255
        street_number:
          type: string
          maxLength: 20
        postal_box:
          type: string
          maxLength: 20
    PersonIdentification:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        middle_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        birth_date:
          type: string
          format: date
          nullable: true
        birth_year:
          type: integer
          maximum: 2999
          minimum: 1900
          nullable: true
        birth_country:
          type: string
          nullable: true
        birth_place:
          type: string
          maxLength: 255
        country_of_citizenship:
          type: string
          nullable: true
        language:
          oneOf:
          - $ref: '#/components/schemas/LanguageEnum'
          - $ref: '#/components/schemas/BlankEnum'
        sex:
          oneOf:
          - $ref: '#/components/schemas/SexEnum'
          - $ref: '#/components/schemas/BlankEnum'
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        civil_state:
          oneOf:
          - $ref: '#/components/schemas/CivilStateEnum'
          - $ref: '#/components/schemas/BlankEnum'
        id_photo:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 1
        id_card:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 2
        passport:
          type: array
          items:
            type: string
          nullable: true
          maxItems: 2
        national_number:
          type: string
          maxLength: 255
        id_card_number:
          type: string
          maxLength: 255
        passport_number:
          type: string
          maxLength: 255
        id_card_expiry_date:
          type: string
          format: date
          nullable: true
        passport_expiry_date:
          type: string
          format: date
          nullable: true
        last_registration_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        last_registration_id:
          type: string
          maxLength: 10
    PoolEnum:
      enum:
      - ADMISSION_POOL_EXTERNAL_REORIENTATION
      - DOCTORATE_EDUCATION_ENROLLMENT
      - CONTINUING_EDUCATION_ENROLLMENT
      - ADMISSION_POOL_EXTERNAL_ENROLLMENT_CHANGE
      - ADMISSION_POOL_VIP
      - ADMISSION_POOL_HUE_UCL_PATHWAY_CHANGE
      - ADMISSION_POOL_INSTITUT_CHANGE
      - ADMISSION_POOL_UE5_BELGIAN
      - ADMISSION_POOL_UE5_NON_BELGIAN
      - ADMISSION_POOL_HUE5_BELGIUM_RESIDENCY
      - ADMISSION_POOL_HUE5_FOREIGN_RESIDENCY
      - ADMISSION_POOL_NON_RESIDENT_QUOTA
      type: string
      description: |-
        * `ADMISSION_POOL_EXTERNAL_REORIENTATION` - ADMISSION_POOL_EXTERNAL_REORIENTATION
        * `DOCTORATE_EDUCATION_ENROLLMENT` - DOCTORATE_EDUCATION_ENROLLMENT
        * `CONTINUING_EDUCATION_ENROLLMENT` - CONTINUING_EDUCATION_ENROLLMENT
        * `ADMISSION_POOL_EXTERNAL_ENROLLMENT_CHANGE` - ADMISSION_POOL_EXTERNAL_ENROLLMENT_CHANGE
        * `ADMISSION_POOL_VIP` - ADMISSION_POOL_VIP
        * `ADMISSION_POOL_HUE_UCL_PATHWAY_CHANGE` - ADMISSION_POOL_HUE_UCL_PATHWAY_CHANGE
        * `ADMISSION_POOL_INSTITUT_CHANGE` - ADMISSION_POOL_INSTITUT_CHANGE
        * `ADMISSION_POOL_UE5_BELGIAN` - ADMISSION_POOL_UE5_BELGIAN
        * `ADMISSION_POOL_UE5_NON_BELGIAN` - ADMISSION_POOL_UE5_NON_BELGIAN
        * `ADMISSION_POOL_HUE5_BELGIUM_RESIDENCY` - ADMISSION_POOL_HUE5_BELGIUM_RESIDENCY
        * `ADMISSION_POOL_HUE5_FOREIGN_RESIDENCY` - ADMISSION_POOL_HUE5_FOREIGN_RESIDENCY
        * `ADMISSION_POOL_NON_RESIDENT_QUOTA` - ADMISSION_POOL_NON_RESIDENT_QUOTA
    PoolQuestions:
      type: object
      properties:
        is_belgian_bachelor:
          type: boolean
          nullable: true
          title: Est bachelier belge
        is_external_reorientation:
          type: boolean
          nullable: true
          title: Est une réorientation externe
        regular_registration_proof:
          type: array
          items:
            type: string
          title: Attestation d'inscription régulière'
          maxItems: 1
        reorientation_form:
          type: array
          items:
            type: string
          title: Formulaire de réorientation complété et signé
          maxItems: 1
        is_external_modification:
          type: boolean
          nullable: true
          title: Est une modification externe
        registration_change_form:
          type: array
          items:
            type: string
          title: Formulaire de modification d'inscription
          maxItems: 1
        regular_registration_proof_for_registration_change:
          type: array
          items:
            type: string
          title: Attestation d'inscription régulière pour la modification d'inscription
            externe
          maxItems: 1
        is_non_resident:
          type: boolean
          nullable: true
          title: Est non-résident (au sens du décret)
        reorientation_pool_end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        reorientation_pool_academic_year:
          type: integer
          readOnly: true
          nullable: true
        modification_pool_end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modification_pool_academic_year:
          type: integer
          readOnly: true
          nullable: true
        forbid_enrolment_limited_course_for_non_resident:
          type: string
          readOnly: true
    PosteDiplomatiqueDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        code:
          type: integer
        nom_francais:
          type: string
        nom_anglais:
          type: string
        adresse_email:
          type: string
      required:
      - adresse_email
      - code
      - nom_anglais
      - nom_francais
    ProfessionalExperience:
      type: object
      properties:
        valuated_from_trainings:
          type: array
          items:
            type: string
          readOnly: true
        external_id:
          type: string
          readOnly: true
          nullable: true
        uuid:
          type: string
          readOnly: true
        institute_name:
          type: string
          title: Nom de l'établissement
          maxLength: 255
        start_date:
          type: string
          format: date
          title: Début
        end_date:
          type: string
          format: date
          title: Fin
        type:
          $ref: '#/components/schemas/TypeEnum'
        certificate:
          type: array
          items:
            type: string
          title: Attestation
        role:
          type: string
          title: Fonction
          maxLength: 255
        sector:
          title: Secteur
          oneOf:
          - $ref: '#/components/schemas/SectorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        activity:
          type: string
          title: Activité
          maxLength: 255
      required:
      - end_date
      - start_date
      - type
    PromoteurDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        matricule:
          type: string
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        est_docteur:
          type: boolean
        institution:
          type: string
        ville:
          type: string
        code_pays:
          type: string
        pays:
          type: string
        est_externe:
          type: boolean
      required:
      - code_pays
      - email
      - est_docteur
      - est_externe
      - institution
      - nom
      - pays
      - prenom
      - uuid
      - ville
    PropositionCreatePermissions:
      type: object
      properties:
        links:
          type: object
          properties:
            create_person:
              $ref: '#/components/schemas/ActionLink'
            create_coordinates:
              $ref: '#/components/schemas/ActionLink'
            create_training_choice:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
    PropositionError:
      type: object
      properties:
        status_code:
          type: string
        detail:
          type: string
      required:
      - detail
      - status_code
    PropositionErrors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PropositionError'
        pool_start_date:
          type: string
          format: date
          nullable: true
        pool_end_date:
          type: string
          format: date
          nullable: true
        access_conditions_url:
          type: string
          nullable: true
        elements_confirmation:
          type: array
          items:
            $ref: '#/components/schemas/ElementConfirmation'
          nullable: true
      required:
      - errors
    PropositionIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
    PropositionSearch:
      type: object
      properties:
        links:
          type: object
          properties:
            create_training_choice:
              $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
        donnees_transferees_vers_compte_interne:
          type: boolean
          default: false
        doctorate_propositions:
          type: array
          items:
            $ref: '#/components/schemas/DoctoratePropositionSearchDTO'
        general_education_propositions:
          type: array
          items:
            $ref: '#/components/schemas/GeneralEducationPropositionSearchDTO'
        continuing_education_propositions:
          type: array
          items:
            $ref: '#/components/schemas/ContinuingEducationPropositionSearchDTO'
      required:
      - continuing_education_propositions
      - doctorate_propositions
      - general_education_propositions
    RefuserPropositionCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_membre:
          type: string
        motif_refus:
          type: string
        commentaire_interne:
          type: string
        commentaire_externe:
          type: string
      required:
      - motif_refus
      - uuid_membre
    RenvoyerInvitationSignatureExterne:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid_membre:
          type: string
      required:
      - uuid_membre
    ResultEnum:
      enum:
      - SUCCESS
      - SUCCESS_WITH_RESIDUAL_CREDITS
      - FAILURE
      - WAITING_RESULT
      type: string
      description: |-
        * `SUCCESS` - Réussite
        * `SUCCESS_WITH_RESIDUAL_CREDITS` - Réussite avec crédits résiduels
        * `FAILURE` - Echoué
        * `WAITING_RESULT` - En attente de résultat
    SectorDTO:
      type: object
      properties:
        sigle:
          type: string
          readOnly: true
        intitule:
          type: string
          readOnly: true
    SectorEnum:
      enum:
      - PUBLIC
      - PRIVATE
      - ASSOCIATIVE
      type: string
      description: |-
        * `PUBLIC` - Public
        * `PRIVATE` - Privé
        * `ASSOCIATIVE` - Associatif
    SexEnum:
      enum:
      - F
      - M
      type: string
      description: |-
        * `F` - Féminin
        * `M` - Masculin
    SpecificEnrolmentPeriods:
      type: object
      properties:
        medicine_dentistry_bachelor:
          allOf:
          - $ref: '#/components/schemas/Period'
          readOnly: true
          nullable: true
    SpecificQuestion:
      type: object
      properties:
        required:
          type: boolean
          title: Requis
        uuid:
          type: string
        type:
          type: string
        title: {}
        text: {}
        help_text: {}
        configuration: {}
        values:
          type: array
          items: {}
      required:
      - configuration
      - help_text
      - text
      - title
      - type
      - uuid
      - values
    StatusEnum:
      enum:
      - EN_BROUILLON
      - FRAIS_DOSSIER_EN_ATTENTE
      - CONFIRMEE
      - ANNULEE
      - A_COMPLETER_POUR_SIC
      - COMPLETEE_POUR_SIC
      - TRAITEMENT_FAC
      - A_COMPLETER_POUR_FAC
      - COMPLETEE_POUR_FAC
      - RETOUR_DE_FAC
      - ATTENTE_VALIDATION_DIRECTION
      - INSCRIPTION_AUTORISEE
      - INSCRIPTION_REFUSEE
      - CLOTUREE
      type: string
      description: |-
        * `EN_BROUILLON` - En brouillon
        * `FRAIS_DOSSIER_EN_ATTENTE` - Frais de dossier en attente
        * `CONFIRMEE` - Demande confirmée
        * `ANNULEE` - Demande annulée
        * `A_COMPLETER_POUR_SIC` - A compléter pour SIC
        * `COMPLETEE_POUR_SIC` - Complétée pour SIC
        * `TRAITEMENT_FAC` - Traitement en Fac
        * `A_COMPLETER_POUR_FAC` - A compléter pour Fac
        * `COMPLETEE_POUR_FAC` - Complétée pour Fac
        * `RETOUR_DE_FAC` - Retour de FAC
        * `ATTENTE_VALIDATION_DIRECTION` - En attente de validation de la direction
        * `INSCRIPTION_AUTORISEE` - Inscription autorisée
        * `INSCRIPTION_REFUSEE` - Inscription refusée
        * `CLOTUREE` - Clôturée
    StudySystemEnum:
      enum:
      - SOCIAL_PROMOTION
      - FULL_TIME
      type: string
      description: |-
        * `SOCIAL_PROMOTION` - Promotion sociale
        * `FULL_TIME` - Plein exercice
    SubmitProposition:
      type: object
      properties:
        annee:
          type: integer
        pool:
          $ref: '#/components/schemas/PoolEnum'
        elements_confirmation: {}
      required:
      - annee
      - elements_confirmation
      - pool
    SupervisionActorReference:
      type: object
      properties:
        actor_type:
          $ref: '#/components/schemas/ActorTypeEnum'
        uuid_membre:
          type: string
      required:
      - actor_type
      - uuid_membre
    SupervisionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        signatures_promoteurs:
          type: array
          items:
            $ref: '#/components/schemas/DetailSignaturePromoteurDTONested'
        signatures_membres_CA:
          type: array
          items:
            $ref: '#/components/schemas/DetailSignatureMembreCADTONested'
        promoteur_reference:
          type: string
      required:
      - signatures_membres_CA
      - signatures_promoteurs
    TranscriptTypeEnum:
      enum:
      - ONE_A_YEAR
      - ONE_FOR_ALL_YEARS
      type: string
      description: |-
        * `ONE_A_YEAR` - Un relevé de notes pour chaque année
        * `ONE_FOR_ALL_YEARS` - Un relevé de notes couvrant l'ensemble des années
    Tutor:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        global_id:
          type: string
          nullable: true
          readOnly: true
    TypeAdmissionEnum:
      enum:
      - ADMISSION
      - PRE_ADMISSION
      type: string
      description: |-
        * `ADMISSION` - Admission
        * `PRE_ADMISSION` - Pré-admission
    TypeEnum:
      enum:
      - WORK
      - INTERNSHIP
      - VOLUNTEERING
      - UNEMPLOYMENT
      - LANGUAGE_TRAVEL
      - OTHER
      type: string
      description: |-
        * `WORK` - Travail
        * `INTERNSHIP` - Stage
        * `VOLUNTEERING` - Volontariat
        * `UNEMPLOYMENT` - Chômage
        * `LANGUAGE_TRAVEL` - Séjour linguistique
        * `OTHER` - Autre
    WritingAbilityEnum:
      enum:
      - A1
      - A2
      - B1
      - B2
      - C1
      - C2
      type: string
      description: |-
        * `A1` - A1
        * `A2` - A2
        * `B1` - B1
        * `B2` - B2
        * `C1` - C1
        * `C2` - C2
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
    ActionLink:
      type: object
      properties:
        error:
          type: string
        method:
          type: string
          enum:
          - DELETE
          - GET
          - PATCH
          - POST
          - PUT
        url:
          type: string
          format: uri
      oneOf:
      - required:
        - method
        - url
      - required:
        - error
    AcceptedLanguageEnum:
      type: string
      enum:
      - en
      - fr-be
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "ESB"
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
  parameters:
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: The header advertises which languages the client is able to understand,
        and which locale variant is preferred. (By languages, we mean natural languages,
        such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
servers:
- url: https://{environment}.osis.uclouvain.be/api/v1/admission/
  variables:
    environment:
      default: dev
      enum:
      - dev
      - qa
      - test
- url: https://osis.uclouvain.be/api/v1/admission/
  description: Production server
